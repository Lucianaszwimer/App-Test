{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport isEmpty from 'lodash.isempty';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNativeBase } from \"../useNativeBase\";\nimport { useColorMode } from \"../../core/color-mode\";\nimport { omitUndefined, extractInObject } from \"../../theme/tools\";\nimport { useBreakpointResolvedProps } from \"../useBreakpointResolvedProps\";\nimport { propsFlattener, compareSpecificity } from \"./propsFlattener\";\nimport { useResponsiveSSRProps } from \"../useResponsiveSSRProps\";\nimport React from 'react';\nimport { ResponsiveQueryContext } from \"../../utils/useResponsiveQuery/ResponsiveQueryProvider\";\nvar SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [].concat(_toConsumableArray(MARGIN_MAP.mx), _toConsumableArray(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [].concat(_toConsumableArray(PADDING_MAP.px), _toConsumableArray(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nvar SPREAD_PROP_SPECIFICITY_MAP = _objectSpread(_objectSpread({}, PADDING_MAP), MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = _objectSpread({}, incomingProps);\n\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  var _config$componentThem;\n\n  var _useNativeBase = useNativeBase(),\n      theme = _useNativeBase.theme;\n\n  var componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  var resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config);\n\n  if (incomingProps !== null && incomingProps !== void 0 && incomingProps.INTERNAL_notResolveThemeAndPseudoProps) {\n    delete incomingProps.INTERNAL_notResolveThemeAndPseudoProps;\n    return incomingProps;\n  }\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\nexport var usePropsResolutionWithComponentTheme = function usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config) {\n  var modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  var _extractInObject = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || [])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      ignoredProps = _extractInObject2[0],\n      cleanIncomingProps = _extractInObject2[1];\n\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  var resolveResponsively = ['colorScheme', 'size', 'variant'].concat(_toConsumableArray((config === null || config === void 0 ? void 0 : config.resolveResponsively) || []));\n\n  var _useNativeBase2 = useNativeBase(),\n      theme = _useNativeBase2.theme;\n\n  var colorModeProps = useColorMode();\n  var extendedTheme = [];\n\n  if (config !== null && config !== void 0 && config.extendTheme) {\n    config === null || config === void 0 ? void 0 : config.extendTheme.map(function (componentName) {\n      extendedTheme.push(get(theme, \"components.\".concat(componentName), {}));\n    });\n  }\n\n  if (!isEmpty(componentTheme)) extendedTheme.push(componentTheme);\n\n  var resolveComponentTheme = function resolveComponentTheme(themeType, providedTheme, config) {\n    try {\n      if (config !== null && config !== void 0 && config.colorScheme) {\n        incomingWithDefaultProps.colorScheme = config.colorScheme;\n      }\n\n      if (themeType[1]) {\n        return typeof providedTheme[themeType[0]][themeType[1]] !== 'function' ? providedTheme[themeType[0]][themeType[1]] : providedTheme[themeType[0]][themeType[1]](_objectSpread(_objectSpread({\n          theme: theme\n        }, incomingWithDefaultProps), colorModeProps));\n      } else {\n        return typeof providedTheme[themeType[0]] !== 'function' ? providedTheme[themeType[0]] : providedTheme[themeType[0]](_objectSpread(_objectSpread({\n          theme: theme\n        }, incomingWithDefaultProps), colorModeProps));\n      }\n    } catch (_unused) {\n      return {};\n    }\n  };\n\n  var callPropsFlattener = function callPropsFlattener() {\n    var targetProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var latestSpecifictyMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var specificity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? _objectSpread(_objectSpread({}, targetProps), {}, {\n        debug: true\n      }) : targetProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: latestSpecifictyMap,\n      previouslyFlattenProps: flattenProps || {},\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, specificity);\n  };\n\n  var incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps);\n  var flattenProps, specificityMap;\n\n  var _callPropsFlattener = callPropsFlattener(incomingWithDefaultProps, {}, 2);\n\n  var _callPropsFlattener2 = _slicedToArray(_callPropsFlattener, 2);\n\n  flattenProps = _callPropsFlattener2[0];\n  specificityMap = _callPropsFlattener2[1];\n  var responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    resolveResponsively.map(function (propsName) {\n      if (flattenProps[propsName]) {\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    var propName = 'direction';\n\n    if (flattenProps[propName]) {\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  var responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  var combinedBaseStyle = {};\n  var combinedVariantStyle = {};\n  var combinedSizeStyle = {};\n  extendedTheme.map(function (extededComponentTheme) {\n    if (extededComponentTheme.baseStyle) {\n      combinedBaseStyle = _objectSpread(_objectSpread({}, combinedBaseStyle), resolveComponentTheme(['baseStyle'], extededComponentTheme));\n    }\n\n    if (responsivelyResolvedProps.variant) {\n      if (extededComponentTheme.variants) {\n        combinedVariantStyle = _objectSpread(_objectSpread({}, combinedVariantStyle), resolveComponentTheme(['variants', responsivelyResolvedProps.variant], extededComponentTheme, {\n          colorScheme: responsivelyResolvedProps === null || responsivelyResolvedProps === void 0 ? void 0 : responsivelyResolvedProps.colorScheme\n        }));\n      }\n    }\n\n    if (responsivelyResolvedProps.size && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes[responsivelyResolvedProps.size]) {\n      if (typeof extededComponentTheme.sizes[responsivelyResolvedProps.size] === 'string' || typeof extededComponentTheme.sizes[responsivelyResolvedProps.size] === 'number') {\n        responsivelyResolvedProps.size = extededComponentTheme.sizes[responsivelyResolvedProps.size];\n      } else {\n        combinedSizeStyle = _objectSpread(_objectSpread({}, combinedSizeStyle), resolveComponentTheme(['sizes', responsivelyResolvedProps.size], extededComponentTheme));\n        responsivelyResolvedProps.size = undefined;\n      }\n    }\n  });\n\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  }\n\n  flattenProps = _objectSpread(_objectSpread({}, flattenProps), responsivelyResolvedProps);\n  var flattenBaseStyle, baseSpecificityMap;\n\n  if (combinedBaseStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _callPropsFlattener3 = callPropsFlattener(combinedBaseStyle, specificityMap);\n\n    var _callPropsFlattener4 = _slicedToArray(_callPropsFlattener3, 2);\n\n    flattenBaseStyle = _callPropsFlattener4[0];\n    baseSpecificityMap = _callPropsFlattener4[1];\n  }\n\n  var flattenVariantStyle, variantSpecificityMap;\n\n  if (combinedVariantStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _callPropsFlattener5 = callPropsFlattener(combinedVariantStyle, baseSpecificityMap || specificityMap);\n\n    var _callPropsFlattener6 = _slicedToArray(_callPropsFlattener5, 2);\n\n    flattenVariantStyle = _callPropsFlattener6[0];\n    variantSpecificityMap = _callPropsFlattener6[1];\n    flattenProps.variant = undefined;\n  }\n\n  var flattenSizeStyle, sizeSpecificityMap;\n\n  if (combinedSizeStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _callPropsFlattener7 = callPropsFlattener(combinedSizeStyle, variantSpecificityMap || baseSpecificityMap || specificityMap);\n\n    var _callPropsFlattener8 = _slicedToArray(_callPropsFlattener7, 2);\n\n    flattenSizeStyle = _callPropsFlattener8[0];\n    sizeSpecificityMap = _callPropsFlattener8[1];\n  }\n\n  var defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  var resolvePseudoProps = function resolvePseudoProps(flatPseudoProp, baseStylePseudoProp) {\n    for (var prop in flatPseudoProp) {\n      baseStylePseudoProp[prop] = flatPseudoProp[prop];\n    }\n\n    return baseStylePseudoProp;\n  };\n\n  for (var prop in defaultStyles) {\n    if (prop.startsWith('_') && flattenProps.hasOwnProperty(prop)) {\n      defaultStyles[prop] = resolvePseudoProps(flattenProps[prop], defaultStyles[prop]);\n    }\n\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader(_objectSpread(_objectSpread({}, defaultStyles), flattenProps), defaultSpecificity);\n  var resolvedProps = omitUndefined(_objectSpread(_objectSpread({}, flattenProps), ignoredProps));\n  return resolvedProps;\n};","map":{"version":3,"mappings":"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","names":["get","merge","isEmpty","useNativeBase","useColorMode","omitUndefined","extractInObject","useBreakpointResolvedProps","propsFlattener","compareSpecificity","useResponsiveSSRProps","React","ResponsiveQueryContext","SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","margin","m","marginTop","marginBottom","marginLeft","marginRight","PADDING_MAP","px","py","pt","pb","pr","pl","padding","p","paddingTop","paddingBottom","paddingLeft","paddingRight","SPREAD_PROP_SPECIFICITY_MAP","propsSpreader","incomingProps","incomingSpecifity","flattenedDefaultProps","specificity","forEach","prop","val","includes","newProp","usePropsResolution","component","state","config","theme","componentTheme","process","env","NODE_ENV","debug","console","log","resolvedProps","usePropsResolutionWithComponentTheme","INTERNAL_notResolveThemeAndPseudoProps","modifiedPropsForSSR","concat","ignoreProps","ignoredProps","cleanIncomingProps","responsiveQueryContext","useContext","disableCSSMediaQueries","resolveResponsively","colorModeProps","extendedTheme","extendTheme","map","componentName","push","resolveComponentTheme","themeType","providedTheme","colorScheme","incomingWithDefaultProps","callPropsFlattener","targetProps","latestSpecifictyMap","props","platform","Platform","OS","colormode","colorMode","currentSpecificityMap","previouslyFlattenProps","flattenProps","cascadePseudoProps","defaultProps","specificityMap","responsiveProps","propsName","propName","responsivelyResolvedProps","combinedBaseStyle","combinedVariantStyle","combinedSizeStyle","extededComponentTheme","baseStyle","variant","variants","size","sizes","undefined","flattenBaseStyle","baseSpecificityMap","flattenVariantStyle","variantSpecificityMap","flattenSizeStyle","sizeSpecificityMap","defaultStyles","resolvePseudoProps","flatPseudoProp","baseStylePseudoProp","startsWith","hasOwnProperty","defaultSpecificity"],"sources":["usePropsResolution.tsx"],"sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport isEmpty from 'lodash.isempty';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport {\n  propsFlattener,\n  compareSpecificity,\n  IStateProps,\n} from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport type { ComponentTheme } from '../../theme';\n\nconst SPREAD_PROP_SPECIFICITY_ORDER = [\n  'p',\n  'padding',\n  'px',\n  'py',\n  'pt',\n  'pb',\n  'pl',\n  'pr',\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'm',\n  'margin',\n  'mx',\n  'my',\n  'mt',\n  'mb',\n  'ml',\n  'mr',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst FINAL_SPREAD_PROPS = [\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst MARGIN_MAP: any = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft'],\n};\n\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\n\nconst PADDING_MAP: any = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft'],\n};\n\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nconst SPREAD_PROP_SPECIFICITY_MAP: any = {\n  ...PADDING_MAP,\n  ...MARGIN_MAP,\n};\n\nfunction propsSpreader(incomingProps: any, incomingSpecifity: any) {\n  const flattenedDefaultProps: any = { ...incomingProps };\n  const specificity: any = {};\n\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach((prop) => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach((newProp: string) => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n\n  return merge({}, flattenedDefaultProps);\n}\n\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\nexport function usePropsResolution(\n  component: string,\n  incomingProps: any,\n  state?: IStateProps,\n  config?: {\n    componentTheme?: any;\n    resolveResponsively?: string[];\n    ignoreProps?: string[];\n    cascadePseudoProps?: boolean;\n    extendTheme?: string[];\n  }\n) {\n  const { theme } = useNativeBase();\n  const componentTheme =\n    config?.componentTheme ?? get(theme, `components.${component}`, {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\n      `%c${component}`,\n      'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;'\n    );\n    /* eslint-disable-next-line */\n    console.log(\n      `%cusePropsResolution`,\n      'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;'\n    );\n    /* eslint-disable-next-line */\n    console.log(\n      '%c incomingProps: ',\n      'color: #4ade80; font-weight: 700;',\n      incomingProps\n    );\n    /* eslint-disable-next-line */\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n    console.log(\n      '%c componentTheme: ',\n      'color: #4ade80; font-weight: 700;',\n      componentTheme\n    );\n  }\n\n  const resolvedProps = usePropsResolutionWithComponentTheme(\n    componentTheme,\n    incomingProps,\n    state,\n    config\n  );\n\n  // Not Resolve theme props and pseudo props\n  if (incomingProps?.INTERNAL_notResolveThemeAndPseudoProps) {\n    delete incomingProps.INTERNAL_notResolveThemeAndPseudoProps;\n    return incomingProps;\n  }\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\n      '%c resolvedProps: ',\n      'color: #22d3ee; font-weight: 700;',\n      resolvedProps\n    );\n  }\n  return resolvedProps;\n}\n\nexport const usePropsResolutionWithComponentTheme = (\n  componentTheme: ComponentTheme,\n  incomingProps: any,\n  state?: IStateProps,\n  config?: {\n    componentTheme?: any;\n    resolveResponsively?: string[];\n    ignoreProps?: string[];\n    cascadePseudoProps?: boolean;\n    extendTheme?: string[];\n  }\n) => {\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  const [ignoredProps, cleanIncomingProps] = extractInObject(\n    modifiedPropsForSSR,\n    ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat(\n      config?.ignoreProps || []\n    )\n  );\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  const resolveResponsively = [\n    'colorScheme',\n    'size',\n    'variant',\n    ...(config?.resolveResponsively || []),\n  ];\n\n  const { theme } = useNativeBase();\n  const colorModeProps = useColorMode();\n\n  const extendedTheme: Array<any> = [];\n  if (config?.extendTheme) {\n    config?.extendTheme.map((componentName: string) => {\n      extendedTheme.push(get(theme, `components.${componentName}`, {}));\n    });\n  }\n  if (!isEmpty(componentTheme)) extendedTheme.push(componentTheme);\n\n  const resolveComponentTheme = (\n    themeType: Array<string>,\n    providedTheme: any,\n    config?: any\n  ): any => {\n    try {\n      if (config?.colorScheme) {\n        incomingWithDefaultProps.colorScheme = config.colorScheme;\n      }\n      if (themeType[1]) {\n        return typeof providedTheme[themeType[0]][themeType[1]] !== 'function'\n          ? providedTheme[themeType[0]][themeType[1]]\n          : providedTheme[themeType[0]][themeType[1]]({\n              theme,\n              ...incomingWithDefaultProps,\n              ...colorModeProps,\n            });\n      } else {\n        return typeof providedTheme[themeType[0]] !== 'function'\n          ? providedTheme[themeType[0]]\n          : providedTheme[themeType[0]]({\n              theme,\n              ...incomingWithDefaultProps,\n              ...colorModeProps,\n            });\n      }\n    } catch {\n      return {};\n    }\n  };\n  const callPropsFlattener = (\n    targetProps = {},\n    latestSpecifictyMap = {},\n    specificity = 1\n  ): any => {\n    return propsFlattener(\n      {\n        props:\n          process.env.NODE_ENV === 'development' && cleanIncomingProps.debug\n            ? { ...targetProps, debug: true }\n            : targetProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: latestSpecifictyMap,\n        previouslyFlattenProps: flattenProps || {},\n        cascadePseudoProps: config?.cascadePseudoProps,\n      },\n      specificity\n    );\n  };\n\n  // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge(\n    {},\n    componentTheme.defaultProps || {},\n    cleanIncomingProps\n  );\n\n  //TODO: hack\n  // 2. Flatten incomingDefaultProps\n  let flattenProps: any, specificityMap;\n  [flattenProps, specificityMap] = callPropsFlattener(\n    incomingWithDefaultProps,\n    {},\n    2\n  );\n  const responsiveProps = {};\n  if (disableCSSMediaQueries) {\n    // STEP 1.5: resolving responsive props\n    resolveResponsively.map((propsName) => {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n  if (resolveResponsively.includes('direction')) {\n    const propName = 'direction';\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n  const responsivelyResolvedProps: any = useBreakpointResolvedProps(\n    responsiveProps\n  );\n\n  // STEP 2: resolving component theme\n  let combinedBaseStyle = {};\n  let combinedVariantStyle = {};\n  let combinedSizeStyle = {};\n  extendedTheme.map((extededComponentTheme: any) => {\n    if (extededComponentTheme.baseStyle) {\n      combinedBaseStyle = {\n        ...combinedBaseStyle,\n        ...resolveComponentTheme(['baseStyle'], extededComponentTheme),\n      };\n    }\n    if (responsivelyResolvedProps.variant) {\n      if (extededComponentTheme.variants) {\n        combinedVariantStyle = {\n          ...combinedVariantStyle,\n          ...resolveComponentTheme(\n            ['variants', responsivelyResolvedProps.variant],\n            extededComponentTheme,\n            { colorScheme: responsivelyResolvedProps?.colorScheme }\n          ),\n        };\n      }\n    }\n    if (\n      responsivelyResolvedProps.size &&\n      extededComponentTheme?.sizes &&\n      extededComponentTheme?.sizes[responsivelyResolvedProps.size]\n    ) {\n      if (\n        typeof extededComponentTheme.sizes[responsivelyResolvedProps.size] ===\n          'string' ||\n        typeof extededComponentTheme.sizes[responsivelyResolvedProps.size] ===\n          'number'\n      ) {\n        responsivelyResolvedProps.size =\n          extededComponentTheme.sizes[responsivelyResolvedProps.size];\n      } else {\n        combinedSizeStyle = {\n          ...combinedSizeStyle,\n          ...resolveComponentTheme(\n            ['sizes', responsivelyResolvedProps.size],\n            extededComponentTheme\n          ),\n        };\n        responsivelyResolvedProps.size = undefined;\n      }\n    }\n  });\n\n  // STEP 2.5: flatten them\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\n      `%cFlattening incoming and Default`,\n      'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;'\n    );\n  }\n\n  flattenProps = {\n    ...flattenProps,\n    ...responsivelyResolvedProps,\n  };\n  // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n\n  // NOTE: Resoloving baseStyle\n  let flattenBaseStyle, baseSpecificityMap;\n  if (combinedBaseStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cFlattening baseStyle`,\n        'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;'\n      );\n    }\n    [flattenBaseStyle, baseSpecificityMap] = callPropsFlattener(\n      combinedBaseStyle,\n      specificityMap\n    );\n  }\n\n  // NOTE: Resolving variants\n  let flattenVariantStyle, variantSpecificityMap;\n  // Extracting props from variant\n  if (combinedVariantStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cFlattening variantStyle`,\n        'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;'\n      );\n    }\n    [flattenVariantStyle, variantSpecificityMap] = callPropsFlattener(\n      combinedVariantStyle,\n      baseSpecificityMap || specificityMap\n    );\n\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    flattenProps.variant = undefined;\n  }\n\n  // NOTE: Resolving size\n\n  let flattenSizeStyle, sizeSpecificityMap;\n  // Extracting props from size\n  if (combinedSizeStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cFlattening sizeStyle`,\n        'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;'\n      );\n    }\n    [flattenSizeStyle, sizeSpecificityMap] = callPropsFlattener(\n      combinedSizeStyle,\n      variantSpecificityMap || baseSpecificityMap || specificityMap\n    );\n  }\n\n  // STEP 4: merge\n  const defaultStyles = merge(\n    {},\n    flattenBaseStyle,\n    flattenVariantStyle,\n    flattenSizeStyle\n  );\n\n  /*Resolve all the internal used Pseudo Props*/\n  const resolvePseudoProps = (\n    flatPseudoProp: any /** Props coming from Pseudo inside flattenProps */,\n    baseStylePseudoProp: any /** Props coming from Pseudo inside defaultStyles(baseStyle) */\n  ) => {\n    for (const prop in flatPseudoProp) {\n      baseStylePseudoProp[prop] =\n        flatPseudoProp[\n          prop\n        ]; /* Replace all the similar prop from from internal props */\n    }\n    return baseStylePseudoProp;\n  };\n\n  for (const prop in defaultStyles) {\n    if (prop.startsWith('_') && flattenProps.hasOwnProperty(prop)) {\n      /*Resolve all the internal used Pseudo Props*/\n      defaultStyles[prop] = resolvePseudoProps(\n        flattenProps[prop],\n        defaultStyles[prop]\n      );\n    }\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge(\n    {},\n    specificityMap,\n    baseSpecificityMap,\n    variantSpecificityMap,\n    sizeSpecificityMap\n  );\n\n  flattenProps = propsSpreader(\n    { ...defaultStyles, ...flattenProps },\n    defaultSpecificity\n  );\n\n  const resolvedProps = omitUndefined({\n    ...flattenProps,\n    ...ignoredProps,\n  });\n\n  // STEP 5: Return\n  return resolvedProps;\n};\n"]},"metadata":{},"sourceType":"module"}
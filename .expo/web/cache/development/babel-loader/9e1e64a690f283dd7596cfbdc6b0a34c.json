{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isDisabled\", \"isReadOnly\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nfunction Slider(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _props$accessibilityL;\n\n  var newProps = _objectSpread(_objectSpread({}, props), {}, {\n    'aria-label': (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : 'Slider'\n  });\n\n  if (typeof props.value === 'number') {\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  var _useLayout = useLayout(),\n      onLayout = _useLayout.onLayout,\n      trackLayout = _useLayout.layout;\n\n  var updatedProps = _extends2({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  var state = useSliderState(_objectSpread(_objectSpread({}, updatedProps), {}, {\n    numberFormatter: {\n      format: function format(e) {\n        return e;\n      }\n    },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: function onChange(val) {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: function onChangeEnd(val) {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    }\n  }));\n  var resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  });\n\n  var _useSlider = useSlider(props, state, trackLayout),\n      trackProps = _useSlider.trackProps;\n\n  var contextValue = React.useMemo(function () {\n    return {\n      trackLayout: trackLayout,\n      state: state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps: trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderTrackHeight,\n      _interactionBox: resolvedProps._interactionBox\n    };\n  }, [trackLayout, state, props.orientation, isDisabled, props.isReversed, props.colorScheme, isReadOnly, onLayout, resolvedProps.thumbSize, resolvedProps.sliderTrackHeight]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(SliderContext.Provider, {\n    value: contextValue\n  }, React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), React.Children.map(props.children, function (child, index) {\n    if (child.displayName === 'SliderThumb') {\n      return React.cloneElement(child, {\n        index: index\n      });\n    }\n\n    return child;\n  })));\n}\n\nexport default forwardRef(Slider);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,SAAT;AACA,SAASC,kBAAT;AAEA,OAAOC,GAAP;AACA,SAASC,aAAT;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,qBAAT;;AAEA,SAASC,MAAT,OAAoEC,GAApE,EAA+E;EAAA,IAA7DC,UAA6D,QAA7DA,UAA6D;EAAA,IAAjDC,UAAiD,QAAjDA,UAAiD;EAAA,IAAlCC,KAAkC;;EAAA;;EAC7E,IAAMC,QAAQ,mCACTD,KADS;IAEZ,uCAAcA,KAAK,CAACE,kBAApB,yEAA0C;EAF9B,EAAd;;EAKA,IAAI,OAAOF,KAAK,CAACG,KAAb,KAAuB,QAA3B,EAAqC;IAEnCF,QAAQ,CAACE,KAATF,GAAiB,CAACD,KAAK,CAACG,KAAP,CAAjBF;EACD;;EAED,IAAI,OAAOD,KAAK,CAACI,YAAb,KAA8B,QAAlC,EAA4C;IAE1CH,QAAQ,CAACG,YAATH,GAAwB,CAACD,KAAK,CAACI,YAAP,CAAxBH;EACD;;EAEDD,KAAK,GAAGC,QAARD;;EAEA,iBAA0CV,SAAS,EAAnD;EAAA,IAAQe,QAAR,cAAQA,QAAR;EAAA,IAA0BC,WAA1B,cAAkBC,MAAlB;;EACA,IAAMC,YAA0B,GAAGC,UAAc,EAAdA,EAAkBT,KAAlBS,CAAnC;;EAEA,IAAIV,UAAU,IAAID,UAAlB,EAA8B;IAC5BU,YAAY,CAACV,UAAbU,GAA0B,IAA1BA;EACD;;EAED,IAAME,KAAK,GAAGrB,cAAc,iCACvBmB,YADuB;IAG1BG,eAAe,EAAE;MAAEC,MAAM,EAAGC,iBAAD;QAAA,OAAOA,CAAP;MAAA;IAAV,CAHS;IAI1BC,QAAQ,EAAEd,KAAK,CAACc,QAJU;IAK1BC,QAAQ,EAAEf,KAAK,CAACe,QALU;IAM1BC,QAAQ,EAAGC,qBAAD,EAAc;MACtBjB,KAAK,CAACgB,QAANhB,IAAkBA,KAAK,CAACgB,QAANhB,CAAeiB,GAAG,CAAC,CAAD,CAAlBjB,CAAlBA;IAPyB,CAAD;IAS1BkB,WAAW,EAAGD,wBAAD,EAAc;MACzBjB,KAAK,CAACkB,WAANlB,IAAqBA,KAAK,CAACkB,WAANlB,CAAkBiB,GAAG,CAAC,CAAD,CAArBjB,CAArBA;IACD;EAXyB,GAA5B;EAcA,IAAMmB,aAAa,GAAG5B,kBAAkB,CAAC,QAAD,EAAWS,KAAX,EAAkB;IACxDF,UADwD,EACxDA,UADwD;IAExDC;EAFwD,CAAlB,CAAxC;;EAKA,iBAAuBL,SAAS,CAC7BM,KAD6B,EAE9BU,KAF8B,EAG9BJ,WAH8B,CAAhC;EAAA,IAAQc,UAAR,cAAQA,UAAR;;EAMA,IAAMC,YAAY,GAAGlC,KAAK,CAACmC,OAANnC,CAAc,YAAM;IACvC,OAAO;MACLmB,WADK,EACLA,WADK;MAELI,KAFK,EAELA,KAFK;MAGLa,WAAW,EAAEvB,KAAK,CAACuB,WAHd;MAILzB,UAAU,EAAEA,UAJP;MAKL0B,UAAU,EAAExB,KAAK,CAACwB,UALb;MAMLC,WAAW,EAAEzB,KAAK,CAACyB,WANd;MAOLL,UAPK,EAOLA,UAPK;MAQLrB,UAAU,EAAEA,UARP;MASL2B,aAAa,EAAErB,QATV;MAULsB,SAAS,EAAER,aAAa,CAACQ,SAVpB;MAWLC,UAAU,EAAET,aAAa,CAACU,iBAXrB;MAYLC,eAAe,EAAEX,aAAa,CAACW;IAZ1B,CAAP;EADmB,GAgBlB,CACDxB,WADC,EAEDI,KAFC,EAGDV,KAAK,CAACuB,WAHL,EAIDzB,UAJC,EAKDE,KAAK,CAACwB,UALL,EAMDxB,KAAK,CAACyB,WANL,EAOD1B,UAPC,EAQDM,QARC,EASDc,aAAa,CAACQ,SATb,EAUDR,aAAa,CAACU,iBAVb,CAhBkB1C,CAArB;;EA8BA,IAAIQ,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,OACEb,oBAACM,aAAD,CAAesC,QAAf;IAAwB5B,KAAK,EAAEkB;EAA/B,GACElC,oBAACK,GAAD,eAAS2B,aAAT;IAAwBtB,GAAG,EAAEA;EAA7B,IACGV,KAAK,CAAC6C,QAAN7C,CAAe8C,GAAf9C,CAAmBa,KAAK,CAACkC,QAAzB/C,EAAmC,UAACgD,KAAD,EAAQC,KAAR,EAAkB;IACpD,IAAID,KAAK,CAACE,WAANF,KAAsB,aAA1B,EAAyC;MACvC,OAAOhD,KAAK,CAACmD,YAANnD,CAAmBgD,KAAnBhD,EAAgD;QACrDiD;MADqD,CAAhDjD,CAAP;IAGD;;IAED,OAAOgD,KAAP;EAPD,EADH,CADF,CADF;AAeD;;AAED,eAAe/C,UAAU,CAACQ,MAAD,CAAzB","names":["React","forwardRef","useSliderState","useLayout","usePropsResolution","Box","SliderContext","useSlider","useHasResponsiveProps","Slider","ref","isDisabled","isReadOnly","props","newProps","accessibilityLabel","value","defaultValue","onLayout","trackLayout","layout","updatedProps","Object","state","numberFormatter","format","e","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","trackProps","contextValue","useMemo","orientation","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","sliderTrackHeight","_interactionBox","Provider","Children","map","children","child","index","displayName","cloneElement"],"sources":["Slider.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      trackLayout,\n      state,\n      orientation: props.orientation,\n      isDisabled: isDisabled,\n      isReversed: props.isReversed,\n      colorScheme: props.colorScheme,\n      trackProps,\n      isReadOnly: isReadOnly,\n      onTrackLayout: onLayout,\n      thumbSize: resolvedProps.thumbSize,\n      sliderSize: resolvedProps.sliderTrackHeight,\n      _interactionBox: resolvedProps._interactionBox,\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    trackLayout,\n    state,\n    props.orientation,\n    isDisabled,\n    props.isReversed,\n    props.colorScheme,\n    isReadOnly,\n    onLayout,\n    resolvedProps.thumbSize,\n    resolvedProps.sliderTrackHeight,\n  ]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <Box {...resolvedProps} ref={ref}>\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]},"metadata":{},"sourceType":"module"}
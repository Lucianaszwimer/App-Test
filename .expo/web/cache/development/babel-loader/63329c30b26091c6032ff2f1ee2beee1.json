{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"in\", \"entryDuration\", \"exitDuration\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PresenceTransition from \"../Transitions/PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/\";\n\nvar Fade = function Fade(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('Fade', props),\n      animationState = _usePropsResolution.in,\n      entryDuration = _usePropsResolution.entryDuration,\n      exitDuration = _usePropsResolution.exitDuration,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return React.createElement(PresenceTransition, _extends({\n    visible: animationState,\n    ref: ref\n  }, resolvedProps), children);\n};\n\nexport default React.memo(React.forwardRef(Fade));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP;AAEA,SAASC,qBAAT;AACA,SAASC,kBAAT;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqCC,GAArC,EAAmD;EAAA,IAAhDC,QAAgD,QAAhDA,QAAgD;EAAA,IAAnCC,KAAmC;;EAC9D,0BAKIJ,kBAAkB,CAAC,MAAD,EAASI,KAAT,CALtB;EAAA,IACMC,cADN,uBACEC,EADF;EAAA,IAEEC,aAFF,uBAEEA,aAFF;EAAA,IAGEC,YAHF,uBAGEA,YAHF;EAAA,IAIKC,aAJL;;EAOA,IAAIV,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,IAAIG,aAAJ,EAAmB;IACjBE,aAAa,CAACC,OAAdD,CAAsBE,UAAtBF,CAAiCG,QAAjCH,GAA4CF,aAA5CE;EACD;;EACD,IAAID,YAAJ,EAAkB;IAChBC,aAAa,CAACI,IAAdJ,CAAmBE,UAAnBF,CAA8BG,QAA9BH,GAAyCD,YAAzCC;EACD;;EAED,OACEZ,oBAACC,kBAAD;IAAoBgB,OAAO,EAAET,cAA7B;IAA6CH,GAAG,EAAEA;EAAlD,GAA2DO,aAA3D,GACGN,QADH,CADF;AAnBF;;AA0BA,eAAeN,KAAK,CAACkB,IAANlB,CAAWA,KAAK,CAACmB,UAANnB,CAAiBI,IAAjBJ,CAAXA,CAAf","names":["React","PresenceTransition","useHasResponsiveProps","usePropsResolution","Fade","ref","children","props","animationState","in","entryDuration","exitDuration","resolvedProps","animate","transition","duration","exit","visible","memo","forwardRef"],"sources":["Fade.tsx"],"sourcesContent":["import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    entryDuration,\n    exitDuration,\n    ...resolvedProps\n  } = usePropsResolution('Fade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} ref={ref} {...resolvedProps}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n"]},"metadata":{},"sourceType":"module"}
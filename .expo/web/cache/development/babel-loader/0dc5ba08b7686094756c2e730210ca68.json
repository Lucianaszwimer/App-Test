{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"children\", \"onTransitionComplete\", \"visible\", \"initial\", \"animate\", \"exit\", \"style\", \"as\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nvar transformStylesMap = {\n  translateY: true,\n  translateX: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true\n};\nvar defaultStyles = {\n  opacity: 1,\n  translateY: 0,\n  translateX: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: '0deg'\n};\n\nvar getAnimatedStyles = function getAnimatedStyles(animateValue) {\n  return function (initial, to) {\n    var styles = {\n      transform: []\n    };\n\n    for (var key in initial) {\n      if (key === 'transition') {\n        continue;\n      }\n\n      if (key in transformStylesMap) {\n        var _styles$transform;\n\n        (_styles$transform = styles.transform) === null || _styles$transform === void 0 ? void 0 : _styles$transform.push(_defineProperty({}, key, animateValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [initial[key], to[key]]\n        })));\n      } else {\n        styles[key] = animateValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [initial[key], to[key]]\n        });\n      }\n    }\n\n    return styles;\n  };\n};\n\nvar defaultTransitionConfig = {\n  type: 'timing',\n  useNativeDriver: true,\n  duration: 250,\n  delay: 0\n};\nexport var Transition = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      onTransitionComplete = _ref.onTransitionComplete,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible,\n      initial = _ref.initial,\n      animate = _ref.animate,\n      exit = _ref.exit,\n      style = _ref.style,\n      as = _ref.as,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var animateValue = React.useRef(new Animated.Value(0)).current;\n  var Component = React.useMemo(function () {\n    if (as) {\n      return Animated.createAnimatedComponent(as);\n    }\n\n    return Animated.View;\n  }, [as]);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      animationState = _React$useState2[0],\n      setAnimationState = _React$useState2[1];\n\n  var prevVisible = React.useRef(visible);\n  React.useEffect(function () {\n    if (animationState === 'entering' || animationState === 'exiting') {\n      var _transition$type;\n\n      var entryTransition = _objectSpread(_objectSpread({}, defaultTransitionConfig), animate === null || animate === void 0 ? void 0 : animate.transition);\n\n      var exitTransition = _objectSpread(_objectSpread({}, defaultTransitionConfig), exit === null || exit === void 0 ? void 0 : exit.transition);\n\n      var startAnimation = animationState === 'entering' ? 1 : 0;\n      var transition = startAnimation ? entryTransition : exitTransition;\n      Animated.sequence([Animated.delay(transition.delay), Animated[(_transition$type = transition.type) !== null && _transition$type !== void 0 ? _transition$type : 'timing'](animateValue, _objectSpread({\n        toValue: startAnimation,\n        useNativeDriver: true\n      }, transition))]).start(function () {\n        if (animationState === 'entering') {\n          setAnimationState('entered');\n        } else if (animationState === 'exiting') {\n          setAnimationState('exited');\n        }\n      });\n    }\n\n    if (animationState === 'exited') {\n      onTransitionComplete && onTransitionComplete('exited');\n    } else if (animationState === 'entered') {\n      onTransitionComplete && onTransitionComplete('entered');\n    }\n  }, [animationState, onTransitionComplete]);\n  React.useEffect(function () {\n    if (prevVisible.current !== visible && !visible) {\n      setAnimationState('exiting');\n    }\n\n    if (visible) {\n      setAnimationState('entering');\n    }\n\n    prevVisible.current = visible;\n  }, [visible]);\n  var initialState = animationState === 'exited' && exit ? _objectSpread(_objectSpread({}, defaultStyles), exit) : _objectSpread(_objectSpread({}, defaultStyles), initial);\n\n  var animateState = _objectSpread(_objectSpread({}, defaultStyles), animate);\n\n  var styles = React.useMemo(function () {\n    return [getAnimatedStyles(animateValue)(initialState, animateState), style];\n  }, [animateValue, initial, animate, style]);\n  return React.createElement(Component, _extends({\n    pointerEvents: !visible ? 'none' : 'box-none',\n    style: [styles],\n    ref: ref\n  }, rest), children);\n});","map":{"version":3,"mappings":"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","names":["React","forwardRef","transformStylesMap","translateY","translateX","scale","scaleX","scaleY","rotate","defaultStyles","opacity","getAnimatedStyles","animateValue","initial","to","styles","transform","key","push","interpolate","inputRange","outputRange","defaultTransitionConfig","type","useNativeDriver","duration","delay","Transition","ref","children","onTransitionComplete","visible","animate","exit","style","as","rest","useRef","Animated","Value","current","Component","useMemo","createAnimatedComponent","View","useState","animationState","setAnimationState","prevVisible","useEffect","entryTransition","transition","exitTransition","startAnimation","sequence","toValue","start","initialState","animateState","pointerEvents"],"sources":["Transition.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { forwardRef } from 'react';\nimport { Animated } from 'react-native';\nimport type {\n  ISupportedTransitions,\n  ITransitionConfig,\n  ITransitionProps,\n} from './types';\n\nconst transformStylesMap = {\n  translateY: true,\n  translateX: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n};\n\nconst defaultStyles = {\n  opacity: 1,\n  translateY: 0,\n  translateX: 0,\n  scale: 1,\n  scaleX: 1,\n  scaleY: 1,\n  rotate: '0deg',\n};\n\nconst getAnimatedStyles = (animateValue: any) => (\n  initial: ISupportedTransitions,\n  to: ISupportedTransitions\n) => {\n  const styles: any = {\n    transform: [],\n  };\n  for (let key in initial) {\n    if (key === 'transition') {\n      continue;\n    }\n\n    if (key in transformStylesMap) {\n      styles.transform?.push({\n        [key]: animateValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [(initial as any)[key], (to as any)[key]],\n        }),\n      } as any);\n    } else {\n      styles[key] = animateValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [(initial as any)[key], (to as any)[key]],\n      });\n    }\n  }\n\n  return styles;\n};\n\nconst defaultTransitionConfig: ITransitionConfig = {\n  type: 'timing',\n  useNativeDriver: true,\n  duration: 250,\n  delay: 0,\n};\n\nexport const Transition = forwardRef(\n  (\n    {\n      children,\n      onTransitionComplete,\n      visible = false,\n      initial,\n      animate,\n      exit,\n      style,\n      as,\n      ...rest\n    }: ITransitionProps,\n    ref: any\n  ) => {\n    const animateValue = React.useRef(new Animated.Value(0)).current;\n\n    const Component = React.useMemo(() => {\n      if (as) {\n        return Animated.createAnimatedComponent(as);\n      }\n      return Animated.View;\n    }, [as]);\n\n    const [animationState, setAnimationState] = React.useState('');\n\n    const prevVisible = React.useRef(visible);\n\n    React.useEffect(() => {\n      if (animationState === 'entering' || animationState === 'exiting') {\n        const entryTransition = {\n          ...defaultTransitionConfig,\n          ...animate?.transition,\n        };\n        const exitTransition = {\n          ...defaultTransitionConfig,\n          ...exit?.transition,\n        };\n\n        const startAnimation = animationState === 'entering' ? 1 : 0;\n\n        const transition = startAnimation ? entryTransition : exitTransition;\n\n        Animated.sequence([\n          // @ts-ignore - delay is present in defaultTransitionConfig\n          Animated.delay(transition.delay),\n          Animated[transition.type ?? 'timing'](animateValue, {\n            toValue: startAnimation,\n            useNativeDriver: true,\n            ...transition,\n          }),\n        ]).start(() => {\n          if (animationState === 'entering') {\n            setAnimationState('entered');\n          } else if (animationState === 'exiting') {\n            setAnimationState('exited');\n          }\n        });\n        // });\n      }\n\n      if (animationState === 'exited') {\n        onTransitionComplete && onTransitionComplete('exited');\n      } else if (animationState === 'entered') {\n        onTransitionComplete && onTransitionComplete('entered');\n      }\n      // if (animationState === 'entering') {\n      //   //\n      // }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationState, onTransitionComplete]);\n\n    React.useEffect(() => {\n      // if (!visible) {\n      if (prevVisible.current !== visible && !visible) {\n        setAnimationState('exiting');\n      }\n\n      if (visible) {\n        setAnimationState('entering');\n      }\n      prevVisible.current = visible;\n      // }\n    }, [visible]);\n\n    // If exit animation is present and state is exiting, we replace 'initial' with 'exit' animation\n\n    //  const initialState = { ...defaultStyles, ...initial };\n    const initialState =\n      animationState === 'exited' && exit\n        ? { ...defaultStyles, ...exit }\n        : { ...defaultStyles, ...initial };\n    // const initialState = { ...defaultStyles, ...initial };\n\n    // initial =\n    //   animationState === 'exited'\n    //     ? { ...defaultStyles, ...exit }\n    //     : { ...defaultStyles, ...initial };\n\n    const animateState = { ...defaultStyles, ...animate };\n\n    // const [initialState, setInitialState] = React.useState({\n    //   ...defaultStyles,\n    //   ...initial,\n    // });\n    // console.log('Initial state ', initial);\n\n    // const [animateState] = React.useState({ ...defaultStyles, ...animate });\n    const styles = React.useMemo(() => {\n      // console.log('display state here', initial);\n      return [\n        getAnimatedStyles(animateValue)(\n          initialState as ISupportedTransitions,\n          animateState as ISupportedTransitions\n        ),\n        style,\n      ];\n    }, [animateValue, initial, animate, style]);\n\n    return (\n      <Component\n        // pointerEvents=\"box-none\"\n        pointerEvents={!visible ? 'none' : 'box-none'}\n        // https://github.com/facebook/react-native/issues/23090#issuecomment-710803743\n        // needsOffscreenAlphaCompositing\n        // style={[styles]}\n        style={[styles]}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}
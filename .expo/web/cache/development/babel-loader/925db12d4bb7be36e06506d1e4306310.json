{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\n\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n      icon = _ref.icon,\n      open = _ref.open,\n      _onPress = _ref.onPress,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme,\n      style = _ref.style,\n      fabStyle = _ref.fabStyle,\n      visible = _ref.visible,\n      testID = _ref.testID,\n      onStateChange = _ref.onStateChange,\n      colorProp = _ref.color;\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      backdrop = _React$useRef.current;\n\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevActions = _React$useState2[0],\n      setPrevActions = _React$useState2[1];\n\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n\n  var colors = theme.colors;\n  var labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.8, 1]\n    }) : 1;\n  });\n\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: colors.backdrop\n    }]\n  })), React.createElement(SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: typeof it.small === 'undefined' || it.small ? 24 : 16\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, {\n      style: [styles.label, {\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, it.labelStyle],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\"\n    }, React.createElement(Text, {\n      style: {\n        color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n      }\n    }, it.label))), React.createElement(FAB, {\n      small: typeof it.small !== 'undefined' ? it.small : true,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: theme.colors.surface\n      }, it.style],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress() {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress();\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    testID: testID\n  })));\n};\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup);\nvar FABGroupWithTheme = withTheme(FABGroup);\nexport { FABGroupWithTheme as FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","color","FAB","Text","Card","withTheme","FABGroup","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","testID","onStateChange","colorProp","useRef","Animated","Value","backdrop","current","animations","map","useState","prevActions","setPrevActions","scale","animation","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","length","_","i","View","pointerEvents","styles","container","TouchableWithoutFeedback","backgroundColor","SafeAreaView","safeArea","it","key","item","marginHorizontal","small","label","transform","labelStyle","accessibilityTraits","accessibilityComponentType","accessibilityRole","labelTextColor","surface","accessibilityState","expanded","fab","displayName","FABGroupWithTheme","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `backgroundColor`\n   * - `small`: boolean describing whether small or normal sized FAB is rendered. Defaults to `true`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<ViewStyle>;\n    small?: boolean;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { colors } = theme;\n\n  const labelColor = theme.dark\n    ? colors.text\n    : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        })\n      : 1\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: colors.backdrop,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => (\n            <View\n              key={i} // eslint-disable-line react/no-array-index-key\n              style={[\n                styles.item,\n                {\n                  marginHorizontal:\n                    typeof it.small === 'undefined' || it.small ? 24 : 16,\n                },\n              ]}\n              pointerEvents={open ? 'box-none' : 'none'}\n            >\n              {it.label && (\n                <View>\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                        it.labelStyle,\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: it.labelTextColor ?? labelColor }}>\n                      {it.label}\n                    </Text>\n                  </Card>\n                </View>\n              )}\n              <FAB\n                small={typeof it.small !== 'undefined' ? it.small : true}\n                icon={it.icon}\n                color={it.color}\n                style={\n                  [\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ] as StyleProp<ViewStyle>\n                }\n                onPress={() => {\n                  it.onPress();\n                  close();\n                }}\n                accessibilityLabel={\n                  typeof it.accessibilityLabel !== 'undefined'\n                    ? it.accessibilityLabel\n                    : it.label\n                }\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={it.testID}\n                visible={open}\n              />\n            </View>\n          ))}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
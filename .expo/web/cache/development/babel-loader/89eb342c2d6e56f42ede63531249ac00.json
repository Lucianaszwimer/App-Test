{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"in\", \"duration\", \"initialScale\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PresenceTransition from \"./PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/\";\n\nvar ScaleFade = function ScaleFade(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('ScaleFade', props),\n      animationState = _usePropsResolution.in,\n      duration = _usePropsResolution.duration,\n      initialScale = _usePropsResolution.initialScale,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (duration) {\n    resolvedProps.animate.transition.duration = duration;\n    resolvedProps.exit.transition.duration = duration;\n  }\n\n  if (initialScale) {\n    resolvedProps.animate.initial.scale = initialScale;\n    resolvedProps.exit.initial.scale = initialScale;\n  }\n\n  return React.createElement(PresenceTransition, _extends({\n    visible: animationState\n  }, resolvedProps, {\n    ref: ref\n  }), children);\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,kBAAP;AACA,SAASC,qBAAT;AACA,SAASC,kBAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0CC,GAA1C,EAAwD;EAAA,IAArDC,QAAqD,QAArDA,QAAqD;EAAA,IAAxCC,KAAwC;;EACxE,0BAKIJ,kBAAkB,CAAC,WAAD,EAAcI,KAAd,CALtB;EAAA,IACMC,cADN,uBACEC,EADF;EAAA,IAEEC,QAFF,uBAEEA,QAFF;EAAA,IAGEC,YAHF,uBAGEA,YAHF;EAAA,IAIKC,aAJL;;EAOA,IAAIV,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,IAAIG,QAAJ,EAAc;IACZE,aAAa,CAACC,OAAdD,CAAsBE,UAAtBF,CAAiCF,QAAjCE,GAA4CF,QAA5CE;IACAA,aAAa,CAACG,IAAdH,CAAmBE,UAAnBF,CAA8BF,QAA9BE,GAAyCF,QAAzCE;EACD;;EACD,IAAID,YAAJ,EAAkB;IAChBC,aAAa,CAACC,OAAdD,CAAsBI,OAAtBJ,CAA8BK,KAA9BL,GAAsCD,YAAtCC;IACAA,aAAa,CAACG,IAAdH,CAAmBI,OAAnBJ,CAA2BK,KAA3BL,GAAmCD,YAAnCC;EACD;;EAED,OACEZ,oBAACC,kBAAD;IAAoBiB,OAAO,EAAEV;EAA7B,GAAiDI,aAAjD;IAAgEP,GAAG,EAAEA;EAArE,IACGC,QADH,CADF;AApBF;;AA2BA,eAAeN,KAAK,CAACmB,IAANnB,CAAWA,KAAK,CAACoB,UAANpB,CAAiBI,SAAjBJ,CAAXA,CAAf","names":["React","PresenceTransition","useHasResponsiveProps","usePropsResolution","ScaleFade","ref","children","props","animationState","in","duration","initialScale","resolvedProps","animate","transition","exit","initial","scale","visible","memo","forwardRef"],"sources":["ScaleFade.tsx"],"sourcesContent":["import React from 'react';\nimport type { IScaleFadeProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst ScaleFade = ({ children, ...props }: IScaleFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    duration,\n    initialScale,\n    ...resolvedProps\n  } = usePropsResolution('ScaleFade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (duration) {\n    resolvedProps.animate.transition.duration = duration;\n    resolvedProps.exit.transition.duration = duration;\n  }\n  if (initialScale) {\n    resolvedProps.animate.initial.scale = initialScale;\n    resolvedProps.exit.initial.scale = initialScale;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} {...resolvedProps} ref={ref}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(ScaleFade));\n"]},"metadata":{},"sourceType":"module"}
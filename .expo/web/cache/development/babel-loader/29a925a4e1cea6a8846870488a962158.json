{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport Backdrop from \"../Backdrop\";\nimport Box from \"../../primitives/Box\";\n\nvar Drawer = function Drawer(_ref) {\n  var children = _ref.children,\n      isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'right' : _ref$placement;\n  var placementStyles = React.useMemo(function () {\n    var styles = {\n      position: 'absolute'\n    };\n\n    if (placement === 'top') {\n      styles.top = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'bottom') {\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'right') {\n      styles.right = 0;\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.height = '100%';\n    } else {\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.height = '100%';\n    }\n\n    return styles;\n  }, [placement]);\n  if (!isOpen) return null;\n  return React.createElement(OverlayContainer, null, React.createElement(Backdrop, {\n    onPress: onClose ? onClose : function () {}\n  }), React.createElement(Box, _extends({}, placementStyles, {\n    opacity: 1\n  }), children));\n};\n\nexport default Drawer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP;AACA,OAAOC,GAAP;;AASA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAKK;EAAA,IAJlBC,QAIkB,QAJlBA,QAIkB;EAAA,IAHlBC,MAGkB,QAHlBA,MAGkB;EAAA,IAFlBC,OAEkB,QAFlBA,OAEkB;EAAA,0BADlBC,SACkB;EAAA,IADlBA,SACkB,+BADN,OACM;EAClB,IAAMC,eAAe,GAAGR,KAAK,CAACS,OAANT,CAAc,YAAM;IAC1C,IAAMU,MAAW,GAAG;MAClBC,QAAQ,EAAE;IADQ,CAApB;;IAIA,IAAIJ,SAAS,KAAK,KAAlB,EAAyB;MACvBG,MAAM,CAACE,GAAPF,GAAa,CAAbA;MACAA,MAAM,CAACG,IAAPH,GAAc,CAAdA;MACAA,MAAM,CAACI,KAAPJ,GAAe,CAAfA;MACAA,MAAM,CAACK,KAAPL,GAAe,MAAfA;IAJF,OAKO,IAAIH,SAAS,KAAK,QAAlB,EAA4B;MACjCG,MAAM,CAACM,MAAPN,GAAgB,CAAhBA;MACAA,MAAM,CAACG,IAAPH,GAAc,CAAdA;MACAA,MAAM,CAACI,KAAPJ,GAAe,CAAfA;MACAA,MAAM,CAACK,KAAPL,GAAe,MAAfA;IAJK,OAKA,IAAIH,SAAS,KAAK,OAAlB,EAA2B;MAChCG,MAAM,CAACI,KAAPJ,GAAe,CAAfA;MACAA,MAAM,CAACE,GAAPF,GAAa,CAAbA;MACAA,MAAM,CAACM,MAAPN,GAAgB,CAAhBA;MACAA,MAAM,CAACO,MAAPP,GAAgB,MAAhBA;IAJK,OAKA;MACLA,MAAM,CAACE,GAAPF,GAAa,CAAbA;MACAA,MAAM,CAACM,MAAPN,GAAgB,CAAhBA;MACAA,MAAM,CAACG,IAAPH,GAAc,CAAdA;MACAA,MAAM,CAACO,MAAPP,GAAgB,MAAhBA;IACD;;IACD,OAAOA,MAAP;EA1BsB,GA2BrB,CAACH,SAAD,CA3BqBP,CAAxB;EA6BA,IAAI,CAACK,MAAL,EAAa,OAAO,IAAP;EAEb,OACEL,oBAACD,gBAAD,QACEC,oBAACC,QAAD;IAAUiB,OAAO,EAAEZ,OAAO,GAAGA,OAAH,GAAa,YAAM,CAAE;EAA/C,EADF,EAEEN,oBAACE,GAAD,eAASM,eAAT;IAA0BW,OAAO,EAAE;EAAnC,IACGf,QADH,CAFF,CADF;AArCF;;AA+CA,eAAeD,MAAf","names":["OverlayContainer","React","Backdrop","Box","Drawer","children","isOpen","onClose","placement","placementStyles","useMemo","styles","position","top","left","right","width","bottom","height","onPress","opacity"],"sources":["index.tsx"],"sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport Backdrop from '../Backdrop';\nimport Box from '../../primitives/Box';\n\nexport type IDrawerProps = {\n  placement?: 'top' | 'left' | 'right' | 'bottom';\n  children?: any;\n  isOpen: boolean;\n  onClose?: () => void;\n};\n\nconst Drawer = ({\n  children,\n  isOpen,\n  onClose,\n  placement = 'right',\n}: IDrawerProps) => {\n  const placementStyles = React.useMemo(() => {\n    const styles: any = {\n      position: 'absolute',\n    };\n\n    if (placement === 'top') {\n      styles.top = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'bottom') {\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'right') {\n      styles.right = 0;\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.height = '100%';\n    } else {\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.height = '100%';\n    }\n    return styles;\n  }, [placement]);\n\n  if (!isOpen) return null;\n\n  return (\n    <OverlayContainer>\n      <Backdrop onPress={onClose ? onClose : () => {}} />\n      <Box {...placementStyles} opacity={1}>\n        {children}\n      </Box>\n    </OverlayContainer>\n  );\n};\n\nexport default Drawer;\n"]},"metadata":{},"sourceType":"module"}
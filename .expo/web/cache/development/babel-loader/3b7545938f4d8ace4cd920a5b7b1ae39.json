{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isDisabled\"],\n    _excluded2 = [\"numberInputValue\", \"step\", \"min\", \"handleChange\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { NBStepper } from \"./NumberInputStepper\";\nimport { NumberInputContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar NumberDecrementStepper = function NumberDecrementStepper(_ref, ref) {\n  var children = _ref.children,\n      pIsDisabled = _ref.isDisabled,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(NumberInputContext),\n      _React$useContext$num = _React$useContext.numberInputValue,\n      numberInputValue = _React$useContext$num === void 0 ? 0 : _React$useContext$num,\n      _React$useContext$ste = _React$useContext.step,\n      step = _React$useContext$ste === void 0 ? 1 : _React$useContext$ste,\n      _React$useContext$min = _React$useContext.min,\n      min = _React$useContext$min === void 0 ? -Infinity : _React$useContext$min,\n      handleChange = _React$useContext.handleChange,\n      context = _objectWithoutProperties(_React$useContext, _excluded2);\n\n  var isDisabled = pIsDisabled || context.isDisabled;\n\n  var pressHandler = function pressHandler() {\n    handleChange && handleChange(numberInputValue - step);\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(NBStepper, _extends({\n    isIncrement: false,\n    isDisabled: isDisabled,\n    pressHandler: pressHandler,\n    disablitityCheck: numberInputValue - step < min\n  }, props, {\n    ref: ref\n  }), children);\n};\n\nexport default React.memo(React.forwardRef(NumberDecrementStepper));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT;AACA,SAASC,kBAAT;AACA,SAASC,qBAAT;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAE7BC,GAF6B,EAG1B;EAAA,IAFDC,QAEC,QAFDA,QAEC;EAAA,IAFqBC,WAErB,QAFSC,UAET;EAAA,IAFqCC,KAErC;;EACH,wBAMyBT,KAAK,CAACU,UAANV,CAAiBE,kBAAjBF,CANzB;EAAA,8CACEW,gBADF;EAAA,IACEA,gBADF,sCACqB,CADrB;EAAA,8CAEEC,IAFF;EAAA,IAEEA,IAFF,sCAES,CAFT;EAAA,8CAGEC,GAHF;EAAA,IAGEA,GAHF,sCAGQ,CAACC,QAHT;EAAA,IAIEC,YAJF,qBAIEA,YAJF;EAAA,IAKKC,OALL;;EAQA,IAAMR,UAAU,GAAGD,WAAW,IAAIS,OAAO,CAACR,UAA1C;;EACA,IAAMS,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzBF,YAAY,IAAIA,YAAY,CAACJ,gBAAgB,GAAGC,IAApB,CAA5BG;EADF;;EAIA,IAAIZ,qBAAqB,CAACM,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACET,oBAACC,SAAD;IACEiB,WAAW,EAAE,KADf;IAEEV,UAAU,EAAEA,UAFd;IAGES,YAAY,EAAEA,YAHhB;IAIEE,gBAAgB,EAAER,gBAAgB,GAAGC,IAAnBD,GAA0BE;EAJ9C,GAKMJ,KALN;IAMEJ,GAAG,EAAEA;EANP,IAQGC,QARH,CADF;AApBF;;AAkCA,eAAeN,KAAK,CAACoB,IAANpB,CAAWA,KAAK,CAACqB,UAANrB,CAAiBI,sBAAjBJ,CAAXA,CAAf","names":["React","NBStepper","NumberInputContext","useHasResponsiveProps","NumberDecrementStepper","ref","children","pIsDisabled","isDisabled","props","useContext","numberInputValue","step","min","Infinity","handleChange","context","pressHandler","isIncrement","disablitityCheck","memo","forwardRef"],"sources":["NumberDecrementStepper.tsx"],"sourcesContent":["import React from 'react';\nimport type { INumberInputContext, INumberInputStepperProps } from './types';\nimport { NBStepper } from './NumberInputStepper';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberDecrementStepper = (\n  { children, isDisabled: pIsDisabled, ...props }: INumberInputStepperProps,\n  ref?: any\n) => {\n  const {\n    numberInputValue = 0,\n    step = 1,\n    min = -Infinity,\n    handleChange,\n    ...context\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  const isDisabled = pIsDisabled || context.isDisabled;\n  const pressHandler = () => {\n    handleChange && handleChange(numberInputValue - step);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <NBStepper\n      isIncrement={false}\n      isDisabled={isDisabled}\n      pressHandler={pressHandler}\n      disablitityCheck={numberInputValue - step < min}\n      {...props}\n      ref={ref}\n    >\n      {children}\n    </NBStepper>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberDecrementStepper));\n"]},"metadata":{},"sourceType":"module"}
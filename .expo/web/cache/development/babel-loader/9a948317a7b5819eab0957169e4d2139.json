{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mergeProps as $4vDl6$mergeProps, filterDOMProps as $4vDl6$filterDOMProps, useId as $4vDl6$useId } from \"@react-aria/utils\";\nimport { useFocusable as $4vDl6$useFocusable, getFocusableTreeWalker as $4vDl6$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { usePress as $4vDl6$usePress, useFocusWithin as $4vDl6$useFocusWithin } from \"@react-aria/interactions\";\nimport { useLabel as $4vDl6$useLabel } from \"@react-aria/label\";\nimport { useLocale as $4vDl6$useLocale } from \"@react-aria/i18n\";\nvar $884aeceb3d67f00f$export$3b7b268d09480394 = new WeakMap();\n\nfunction $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {\n  var value = props.value,\n      children = props.children,\n      ariaLabel = props['aria-label'],\n      ariaLabelledby = props['aria-labelledby'];\n  var isDisabled = props.isDisabled || state.isDisabled;\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  var checked = state.selectedValue === value;\n\n  var onChange = function onChange(e) {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n\n  var _$4vDl6$usePress = $4vDl6$usePress({\n    isDisabled: isDisabled\n  }),\n      pressProps = _$4vDl6$usePress.pressProps;\n\n  var _$4vDl6$useFocusable = $4vDl6$useFocusable($4vDl6$mergeProps(props, {\n    onFocus: function onFocus() {\n      return state.setLastFocusedValue(value);\n    }\n  }), ref),\n      focusableProps = _$4vDl6$useFocusable.focusableProps;\n\n  var interactions = $4vDl6$mergeProps(pressProps, focusableProps);\n  var domProps = $4vDl6$filterDOMProps(props, {\n    labelable: true\n  });\n  var tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;\n  if (isDisabled) tabIndex = undefined;\n  return {\n    inputProps: $4vDl6$mergeProps(domProps, _objectSpread(_objectSpread({}, interactions), {}, {\n      type: 'radio',\n      name: $884aeceb3d67f00f$export$3b7b268d09480394.get(state),\n      tabIndex: tabIndex,\n      disabled: isDisabled,\n      checked: checked,\n      value: value,\n      onChange: onChange\n    })),\n    isDisabled: isDisabled,\n    isSelected: checked\n  };\n}\n\nfunction $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {\n  var name = props.name,\n      validationState = props.validationState,\n      isReadOnly = props.isReadOnly,\n      isRequired = props.isRequired,\n      isDisabled = props.isDisabled,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'vertical' : _props$orientation;\n\n  var _$4vDl6$useLocale = $4vDl6$useLocale(),\n      direction = _$4vDl6$useLocale.direction;\n\n  var _$4vDl6$useLabel = $4vDl6$useLabel(_objectSpread(_objectSpread({}, props), {}, {\n    labelElementType: 'span'\n  })),\n      labelProps = _$4vDl6$useLabel.labelProps,\n      fieldProps = _$4vDl6$useLabel.fieldProps;\n\n  var domProps = $4vDl6$filterDOMProps(props, {\n    labelable: true\n  });\n\n  var _$4vDl6$useFocusWithi = $4vDl6$useFocusWithin({\n    onBlurWithin: function onBlurWithin() {\n      if (!state.selectedValue) state.setLastFocusedValue(null);\n    }\n  }),\n      focusWithinProps = _$4vDl6$useFocusWithi.focusWithinProps;\n\n  var onKeyDown = function onKeyDown(e) {\n    var nextDir;\n\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') nextDir = 'prev';else nextDir = 'next';\n        break;\n\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') nextDir = 'next';else nextDir = 'prev';\n        break;\n\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n\n      default:\n        return;\n    }\n\n    e.preventDefault();\n    var walker = $4vDl6$getFocusableTreeWalker(e.currentTarget, {\n      from: e.target\n    });\n    var nextElem;\n\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n\n    if (nextElem) {\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n\n  var groupName = $4vDl6$useId(name);\n  $884aeceb3d67f00f$export$3b7b268d09480394.set(state, groupName);\n  return {\n    radioGroupProps: $4vDl6$mergeProps(domProps, _objectSpread(_objectSpread({\n      role: 'radiogroup',\n      onKeyDown: onKeyDown,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation\n    }, fieldProps), focusWithinProps)),\n    labelProps: labelProps\n  };\n}\n\nexport { $0d5c49892c1215da$export$37b0961d2f4751e2 as useRadio, $430f30ed08ec25fa$export$62b9571f283ff5c2 as useRadioGroup };","map":{"version":3,"mappings":"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","names":["$884aeceb3d67f00f$export$3b7b268d09480394","WeakMap","$0d5c49892c1215da$export$37b0961d2f4751e2","props","state","ref","value","children","ariaLabel","ariaLabelledby","isDisabled","hasChildren","hasAriaLabel","console","warn","checked","selectedValue","onChange","e","stopPropagation","setSelectedValue","$4vDl6$usePress","pressProps","$4vDl6$useFocusable","$4vDl6$mergeProps","onFocus","setLastFocusedValue","focusableProps","interactions","domProps","$4vDl6$filterDOMProps","labelable","tabIndex","lastFocusedValue","undefined","inputProps","type","name","get","disabled","isSelected","$430f30ed08ec25fa$export$62b9571f283ff5c2","validationState","isReadOnly","isRequired","orientation","$4vDl6$useLocale","direction","$4vDl6$useLabel","labelElementType","labelProps","fieldProps","$4vDl6$useFocusWithin","onBlurWithin","focusWithinProps","onKeyDown","nextDir","key","preventDefault","walker","$4vDl6$getFocusableTreeWalker","currentTarget","from","target","nextElem","nextNode","currentNode","firstChild","previousNode","lastChild","focus","groupName","$4vDl6$useId","set","radioGroupProps","role"],"sources":["packages/@react-aria/radio/src/utils.ts","packages/@react-aria/radio/src/useRadio.ts","packages/@react-aria/radio/src/useRadioGroup.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RadioGroupState} from '@react-stately/radio';\n\nexport const radioGroupNames = new WeakMap<RadioGroupState, string>();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioProps} from '@react-types/radio';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface RadioAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the radio is disabled. */\n  isDisabled: boolean,\n  /** Whether the radio is currently selected. */\n  isSelected: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for an individual\n * radio button in a radio group.\n * @param props - Props for the radio.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n * @param ref - Ref to the HTML input element.\n */\nexport function useRadio(props: AriaRadioProps, state: RadioGroupState, ref: RefObject<HTMLInputElement>): RadioAria {\n  let {\n    value,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  } = props;\n\n  const isDisabled = props.isDisabled || state.isDisabled;\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  let checked = state.selectedValue === value;\n\n  let onChange = (e) => {\n    e.stopPropagation();\n    state.setSelectedValue(value);\n  };\n\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(mergeProps(props, {\n    onFocus: () => state.setLastFocusedValue(value)\n  }), ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;\n  if (isDisabled) {\n    tabIndex = undefined;\n  }\n\n  return {\n    inputProps: mergeProps(domProps, {\n      ...interactions,\n      type: 'radio',\n      name: radioGroupNames.get(state),\n      tabIndex,\n      disabled: isDisabled,\n      checked,\n      value,\n      onChange\n    }),\n    isDisabled,\n    isSelected: checked\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaRadioGroupProps} from '@react-types/radio';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {getFocusableTreeWalker} from '@react-aria/focus';\nimport {radioGroupNames} from './utils';\nimport {RadioGroupState} from '@react-stately/radio';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\nexport interface RadioGroupAria {\n  /** Props for the radio group wrapper element. */\n  radioGroupProps: DOMAttributes,\n  /** Props for the radio group's visible label (if any). */\n  labelProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a radio group component.\n * Radio groups allow users to select a single item from a list of mutually exclusive options.\n * @param props - Props for the radio group.\n * @param state - State for the radio group, as returned by `useRadioGroupState`.\n */\nexport function useRadioGroup(props: AriaRadioGroupProps, state: RadioGroupState): RadioGroupAria {\n  let {\n    name,\n    validationState,\n    isReadOnly,\n    isRequired,\n    isDisabled,\n    orientation = 'vertical'\n  } = props;\n  let {direction} = useLocale();\n\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    // Radio group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // When the radio group loses focus, reset the focusable radio to null if\n  // there is no selection. This allows tabbing into the group from either\n  // direction to go to the first or last radio.\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      if (!state.selectedValue) {\n        state.setLastFocusedValue(null);\n      }\n    }\n  });\n\n  let onKeyDown = (e) => {\n    let nextDir;\n    switch (e.key) {\n      case 'ArrowRight':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'prev';\n        } else {\n          nextDir = 'next';\n        }\n        break;\n      case 'ArrowLeft':\n        if (direction === 'rtl' && orientation !== 'vertical') {\n          nextDir = 'next';\n        } else {\n          nextDir = 'prev';\n        }\n        break;\n      case 'ArrowDown':\n        nextDir = 'next';\n        break;\n      case 'ArrowUp':\n        nextDir = 'prev';\n        break;\n      default:\n        return;\n    }\n    e.preventDefault();\n    let walker = getFocusableTreeWalker(e.currentTarget, {from: e.target});\n    let nextElem;\n    if (nextDir === 'next') {\n      nextElem = walker.nextNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.firstChild();\n      }\n    } else {\n      nextElem = walker.previousNode();\n      if (!nextElem) {\n        walker.currentNode = e.currentTarget;\n        nextElem = walker.lastChild();\n      }\n    }\n    if (nextElem) {\n      // Call focus on nextElem so that keyboard navigation scrolls the radio into view\n      nextElem.focus();\n      state.setSelectedValue(nextElem.value);\n    }\n  };\n\n  let groupName = useId(name);\n  radioGroupNames.set(state, groupName);\n\n  return {\n    radioGroupProps: mergeProps(domProps, {\n      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup\n      role: 'radiogroup',\n      onKeyDown,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      'aria-disabled': isDisabled || undefined,\n      'aria-orientation': orientation,\n      ...fieldProps,\n      ...focusWithinProps\n    }),\n    labelProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
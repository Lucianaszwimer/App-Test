{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { useThemeProps } from \"../../../hooks/useThemeProps\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { canUseDom } from \"../../../utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar SlideFade = function SlideFade(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var isDomUsable = canUseDom();\n\n  var _useThemeProps = useThemeProps('SlideFade', props),\n      animationState = _useThemeProps.in,\n      duration = _useThemeProps.duration,\n      offsetX = _useThemeProps.offsetX,\n      offsetY = _useThemeProps.offsetY;\n\n  var fadeAnim = React.useRef(new Animated.Value(0)).current;\n  var slideAnimX = React.useRef(new Animated.Value(0)).current;\n  var slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  var animIn = function animIn() {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  var animOut = function animOut() {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetX && Animated.timing(slideAnimX, {\n        toValue: offsetX,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetY && Animated.timing(slideAnimY, {\n        toValue: offsetY,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  animationState ? animIn() : animOut();\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Animated.View, {\n    style: [{\n      opacity: fadeAnim,\n      transform: [{\n        translateX: slideAnimX,\n        translateY: slideAnimY\n      }]\n    }],\n    ref: ref\n  }, React.createElement(Box, props, children));\n};\n\nexport default React.memo(React.forwardRef(SlideFade));","map":{"version":3,"mappings":"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","names":["React","Box","useThemeProps","canUseDom","useHasResponsiveProps","SlideFade","ref","children","props","isDomUsable","animationState","in","duration","offsetX","offsetY","fadeAnim","useRef","Animated","Value","current","slideAnimX","slideAnimY","animIn","timing","toValue","useNativeDriver","Platform","OS","start","animOut","View","style","opacity","transform","translateX","translateY","memo","forwardRef"],"sources":["SlideFade.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps, ref?: any) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n      ref={ref}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(React.forwardRef(SlideFade));\n"]},"metadata":{},"sourceType":"module"}
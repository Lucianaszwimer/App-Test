{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"debug\"];\nimport { getStyleAndFilteredProps, propConfig } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport stableHash from 'stable-hash';\n\nvar getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};\n\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_ref) {\n  var propStyle = _ref.style,\n      debug = _ref.debug,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n\n  var _useNativeBaseConfig = useNativeBaseConfig('makeStyledComponent'),\n      currentBreakpoint = _useNativeBaseConfig.currentBreakpoint,\n      config = _useNativeBaseConfig.config;\n\n  var strictMode = config.strictMode;\n\n  var _useResponsiveQuery = useResponsiveQuery(),\n      getResponsiveStyles = _useResponsiveQuery.getResponsiveStyles;\n\n  var _getStyledSystemProps = getStyledSystemPropsAndRestProps(props),\n      styledSystemProps = _getStyledSystemProps.styledSystemProps,\n      restProps = _getStyledSystemProps.restProps;\n\n  var _React$useMemo = React.useMemo(function () {\n    var _getStyleAndFilteredP = getStyleAndFilteredProps({\n      styledSystemProps: styledSystemProps,\n      theme: theme,\n      debug: debug,\n      currentBreakpoint: currentBreakpoint,\n      strictMode: strictMode,\n      getResponsiveStyles: getResponsiveStyles\n    }),\n        styleSheet = _getStyleAndFilteredP.styleSheet,\n        dataSet = _getStyleAndFilteredP.dataSet;\n\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet: dataSet\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet: dataSet\n      };\n    }\n  }, [stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n      style = _React$useMemo.style,\n      dataSet = _React$useMemo.dataSet;\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};","map":{"version":3,"mappings":";;AAAA,SAASA,wBAAT,EAAmCC,UAAnC;AACA,SAASC,QAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT;AACA,SAASC,kBAAT;AAEA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,IAAMC,gCAAgC,GAAIC,SAApCD,gCAAoCC,MAAD,EAAgB;EACvD,IAAMC,iBAAsB,GAAG,EAA/B;EACA,IAAMC,SAAc,GAAG,EAAvB;;EAEA,KAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;IACrB,IAAIG,GAAG,IAAIV,UAAX,EAAuB;MACrBQ,iBAAiB,CAACE,GAAD,CAAjBF,GAAyBD,KAAK,CAACG,GAAD,CAA9BF;IADF,OAEO;MACLC,SAAS,CAACC,GAAD,CAATD,GAAiBF,KAAK,CAACG,GAAD,CAAtBD;IACD;EACF;;EAED,OAAO;IAAED,iBAAF,EAAEA,iBAAF;IAAqBC;EAArB,CAAP;AAZF;;AAeA,OAAO,IAAME,4BAA4B,GAAG,SAA/BA,4BAA+B,OAIjC;EAAA,IAHFC,SAGE,QAHTC,KAGS;EAAA,IAFTC,KAES,QAFTA,KAES;EAAA,IADNP,KACM;;EACT,IAAMQ,KAAK,GAAGd,QAAQ,EAAtB;;EACA,2BAAsCE,mBAAmB,CACvD,qBADuD,CAAzD;EAAA,IAAQa,iBAAR,wBAAQA,iBAAR;EAAA,IAA2BC,MAA3B,wBAA2BA,MAA3B;;EAGA,IAAMC,UAAU,GAAGD,MAAM,CAACC,UAA1B;;EAEA,0BAAgCd,kBAAkB,EAAlD;EAAA,IAAQe,mBAAR,uBAAQA,mBAAR;;EAEA,4BAAyCb,gCAAgC,CACvEC,KADuE,CAAzE;EAAA,IAAQC,iBAAR,yBAAQA,iBAAR;EAAA,IAA2BC,SAA3B,yBAA2BA,SAA3B;;EAIA,qBAA2BP,KAAK,CAACkB,OAANlB,CAAc,YAAM;IAC7C,4BAAgCH,wBAAwB,CAAC;MACvDS,iBADuD,EACvDA,iBADuD;MAEvDO,KAFuD,EAEvDA,KAFuD;MAGvDD,KAHuD,EAGvDA,KAHuD;MAIvDE,iBAJuD,EAIvDA,iBAJuD;MAKvDE,UALuD,EAKvDA,UALuD;MAMvDC;IANuD,CAAD,CAAxD;IAAA,IAAQE,UAAR,yBAAQA,UAAR;IAAA,IAAoBC,OAApB,yBAAoBA,OAApB;;IAQA,IAAIV,SAAJ,EAAe;MACb,OAAO;QAAEC,KAAK,EAAE,CAACQ,UAAU,CAACE,GAAZ,EAAiBX,SAAjB,CAAT;QAAsCU;MAAtC,CAAP;IADF,OAEO;MACL,OAAO;QAAET,KAAK,EAAEQ,UAAU,CAACE,GAApB;QAAyBD;MAAzB,CAAP;IAZ2C;EAApB,GAexB,CAEDjB,UAAU,CAACG,iBAAD,CAFT,EAGDO,KAHC,EAIDD,KAJC,EAKDE,iBALC,EAMDE,UANC,EAODN,SAPC,EAQDO,mBARC,EASDZ,KATC,CAfwBL,CAA3B;EAAA,IAAQW,KAAR,kBAAQA,KAAR;EAAA,IAAeS,OAAf,kBAAeA,OAAf;;EA0BA,IAAIE,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,aAAzBA,IAA0CV,KAA9C,EAAqD;IAEnDa,OAAO,CAACC,GAARD,CAAY,gBAAZA,EAA8BX,iBAA9BW;EACD;;EAEDlB,SAAS,CAACa,OAAVb,GAAoBa,OAApBb;EAEA,OAAO,CAACI,KAAD,EAAQJ,SAAR,CAAP;AAlDK","names":["getStyleAndFilteredProps","propConfig","useTheme","React","useNativeBaseConfig","useResponsiveQuery","stableHash","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","propStyle","style","debug","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","useMemo","styleSheet","dataSet","box","process","env","NODE_ENV","console","log"],"sources":["useStyledSystemPropsResolver.ts"],"sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"index\", \"isDisabled\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { AccordionContext, AccordionItemContext } from \"./Context\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar AccordionItem = function AccordionItem(_ref, ref) {\n  var children = _ref.children,\n      _ref$index = _ref.index,\n      pIndex = _ref$index === void 0 ? 0 : _ref$index,\n      isDisabled = _ref.isDisabled,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      cIndex = _React$useContext.index,\n      changeHandler = _React$useContext.changeHandler;\n\n  var _useThemeProps = useThemeProps('AccordionItem', props),\n      newProps = _extends2({}, _useThemeProps);\n\n  var isOpen = cIndex === null || cIndex === void 0 ? void 0 : cIndex.includes(pIndex);\n\n  var onClose = function onClose(cb) {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n\n  var onOpen = function onOpen(cb) {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n\n  var childSetter = function childSetter() {\n    if (typeof children === 'function') return children({\n      isExpanded: isOpen,\n      isDisabled: isDisabled\n    });\n    return children;\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(AccordionItemContext.Provider, {\n    value: {\n      index: pIndex,\n      isOpen: isOpen,\n      isDisabled: isDisabled,\n      onClose: onClose,\n      onOpen: onOpen\n    }\n  }, React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), childSetter()));\n};\n\nexport default React.memo(React.forwardRef(AccordionItem));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP;AACA,SAASC,gBAAT,EAA2BC,oBAA3B;AAEA,SAASC,aAAT;AACA,SAASC,qBAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAEpBC,GAFoB,EAGjB;EAAA,IAFDC,QAEC,QAFDA,QAEC;EAAA,sBAFSC,KAET;EAAA,IAFgBC,MAEhB,2BAFyB,CAEzB;EAAA,IAF4BC,UAE5B,QAF4BA,UAE5B;EAAA,IAF2CC,KAE3C;;EACH,wBAG4BZ,KAAK,CAACa,UAANb,CAAiBE,gBAAjBF,CAH5B;EAAA,IACSc,MADT,qBACEL,KADF;EAAA,IAEEM,aAFF,qBAEEA,aAFF;;EAIA,qBAAwBX,aAAa,CAAC,eAAD,EAAkBQ,KAAlB,CAArC;EAAA,IAAWI,QAAX;;EAEA,IAAMC,MAAM,GAAGH,MAAH,SAAGA,UAAH,WAAGA,GAAH,MAAGA,SAAM,CAAEI,QAARJ,CAAiBJ,MAAjBI,CAAf;;EACA,IAAMK,OAAO,GAAIC,SAAXD,OAAWC,GAAD,EAAqB;IACnCL,aAAa,IAAIA,aAAa,CAAC,KAAD,EAAQL,MAAR,CAA9BK;IACAK,EAAE,IAAIA,EAAE,EAARA;EAFF;;EAIA,IAAMC,MAAM,GAAID,SAAVC,MAAUD,GAAD,EAAqB;IAClCL,aAAa,IAAIA,aAAa,CAAC,IAAD,EAAOL,MAAP,CAA9BK;IACAK,EAAE,IAAIA,EAAE,EAARA;EAFF;;EAIA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxB,IAAI,OAAOd,QAAP,KAAoB,UAAxB,EACE,OAAOA,QAAQ,CAAC;MAAEe,UAAU,EAAEN,MAAd;MAAsBN;IAAtB,CAAD,CAAf;IACF,OAAOH,QAAP;EAHF;;EAMA,IAAIH,qBAAqB,CAACO,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACEZ,oBAACG,oBAAD,CAAsBqB,QAAtB;IACEC,KAAK,EAAE;MACLhB,KAAK,EAAEC,MADF;MAELO,MAFK,EAELA,MAFK;MAGLN,UAHK,EAGLA,UAHK;MAILQ,OAJK,EAILA,OAJK;MAKLE;IALK;EADT,GASErB,oBAACC,GAAD,eAASe,QAAT;IAAmBT,GAAG,EAAEA;EAAxB,IACGe,WAAW,EADd,CATF,CADF;AA5BF;;AA6CA,eAAetB,KAAK,CAAC0B,IAAN1B,CAAWA,KAAK,CAAC2B,UAAN3B,CAAiBM,aAAjBN,CAAXA,CAAf","names":["React","Box","AccordionContext","AccordionItemContext","useThemeProps","useHasResponsiveProps","AccordionItem","ref","children","index","pIndex","isDisabled","props","useContext","cIndex","changeHandler","newProps","isOpen","includes","onClose","cb","onOpen","childSetter","isExpanded","Provider","value","memo","forwardRef"],"sources":["AccordionItem.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport type { IAccordionItemProps, IAccordionContextProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionItem = (\n  { children, index: pIndex = 0, isDisabled, ...props }: IAccordionItemProps,\n  ref?: any\n) => {\n  const {\n    index: cIndex,\n    changeHandler,\n  }: IAccordionContextProps = React.useContext(AccordionContext);\n  const { ...newProps } = useThemeProps('AccordionItem', props);\n\n  const isOpen = cIndex?.includes(pIndex);\n  const onClose = (cb?: () => void) => {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n  const onOpen = (cb?: () => void) => {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n  const childSetter = () => {\n    if (typeof children === 'function')\n      return children({ isExpanded: isOpen, isDisabled });\n    return children;\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <AccordionItemContext.Provider\n      value={{\n        index: pIndex,\n        isOpen,\n        isDisabled,\n        onClose,\n        onOpen,\n      }}\n    >\n      <Box {...newProps} ref={ref}>\n        {childSetter()}\n      </Box>\n    </AccordionItemContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionItem));\n"]},"metadata":{},"sourceType":"module"}
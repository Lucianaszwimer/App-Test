{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"children\", \"isDisabled\", \"disabled\", \"isHovered\", \"isPressed\", \"isFocused\", \"isFocusVisible\"],\n    _excluded2 = [\"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport RNPressable from \"react-native-web/dist/exports/Pressable\";\nimport { composeEventHandlers } from \"../../../utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useFocusRing } from '@react-native-aria/focus';\nexport var useHover = function useHover() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isHovered = _React$useState2[0],\n      setHovered = _React$useState2[1];\n\n  return {\n    hoverProps: {\n      onHoverIn: function onHoverIn() {\n        return setHovered(true);\n      },\n      onHoverOut: function onHoverOut() {\n        return setHovered(false);\n      }\n    },\n    isHovered: isHovered\n  };\n};\nexport var useFocus = function useFocus() {\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isFocused = _React$useState4[0],\n      setFocused = _React$useState4[1];\n\n  return {\n    focusProps: {\n      onFocus: function onFocus() {\n        return setFocused(true);\n      },\n      onBlur: function onBlur() {\n        return setFocused(false);\n      }\n    },\n    isFocused: isFocused\n  };\n};\nexport var useIsPressed = function useIsPressed() {\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isPressed = _React$useState6[0],\n      setIsPressed = _React$useState6[1];\n\n  return {\n    pressableProps: {\n      onPressIn: function onPressIn() {\n        return setIsPressed(true);\n      },\n      onPressOut: function onPressOut() {\n        return setIsPressed(false);\n      }\n    },\n    isPressed: isPressed\n  };\n};\nvar StyledPressable = makeStyledComponent(RNPressable);\n\nvar Pressable = function Pressable(_ref, ref) {\n  var children = _ref.children,\n      isDisabled = _ref.isDisabled,\n      disabled = _ref.disabled,\n      isHoveredProp = _ref.isHovered,\n      isPressedProp = _ref.isPressed,\n      isFocusedProp = _ref.isFocused,\n      isFocusVisibleProp = _ref.isFocusVisible,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useHover = useHover(),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _useIsPressed = useIsPressed(),\n      pressableProps = _useIsPressed.pressableProps,\n      isPressed = _useIsPressed.isPressed;\n\n  var _useFocus = useFocus(),\n      focusProps = _useFocus.focusProps,\n      isFocused = _useFocus.isFocused;\n\n  var _useFocusRing = useFocusRing(),\n      isFocusVisible = _useFocusRing.isFocusVisible,\n      focusRingProps = _useFocusRing.focusProps;\n\n  var _usePropsResolution = usePropsResolution('Pressable', props, {\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isHovered: isHoveredProp || isHovered,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: disabled || isDisabled\n  }),\n      onPressIn = _usePropsResolution.onPressIn,\n      onPressOut = _usePropsResolution.onPressOut,\n      onHoverIn = _usePropsResolution.onHoverIn,\n      onHoverOut = _usePropsResolution.onHoverOut,\n      onFocus = _usePropsResolution.onFocus,\n      onBlur = _usePropsResolution.onBlur,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(StyledPressable, _extends({\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut),\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn),\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut),\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus),\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur),\n    disabled: disabled || isDisabled\n  }, resolvedProps), typeof children !== 'function' ? children : children({\n    isPressed: isPressed,\n    isHovered: isHovered,\n    isFocused: isFocused\n  }));\n};\n\nexport default memo(forwardRef(Pressable));","map":{"version":3,"mappings":"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","names":["React","forwardRef","memo","composeEventHandlers","useHasResponsiveProps","makeStyledComponent","usePropsResolution","useFocusRing","useHover","useState","isHovered","setHovered","hoverProps","onHoverIn","onHoverOut","useFocus","isFocused","setFocused","focusProps","onFocus","onBlur","useIsPressed","isPressed","setIsPressed","pressableProps","onPressIn","onPressOut","StyledPressable","RNPressable","Pressable","ref","children","isDisabled","disabled","isHoveredProp","isPressedProp","isFocusedProp","isFocusVisibleProp","isFocusVisible","props","focusRingProps","resolvedProps"],"sources":["Pressable.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IPressableProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false),\n    },\n    isHovered,\n  };\n};\n\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false),\n    },\n    isPressed,\n  };\n};\n\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = (\n  {\n    children,\n    isDisabled,\n    disabled,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    ...props\n  }: IPressableProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, {\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isHovered: isHoveredProp || isHovered,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: disabled || isDisabled,\n  });\n\n  // TODO: Replace Render props with Context Hook\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // TODO: Replace Render props with Context Hook\n  return (\n    <StyledPressable\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      disabled={disabled || isDisabled}\n      {...resolvedProps}\n    >\n      {typeof children !== 'function'\n        ? children\n        : children({\n            isPressed,\n            isHovered,\n            isFocused,\n          })}\n    </StyledPressable>\n  );\n};\n\nexport default memo(forwardRef(Pressable));\n"]},"metadata":{},"sourceType":"module"}
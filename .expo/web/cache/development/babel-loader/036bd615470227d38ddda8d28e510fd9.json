{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"defaultValue\", \"value\", \"onChange\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport MenuGroup from \"./MenuGroup\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport var MenuOptionContext = React.createContext({\n  values: [],\n  onChange: function onChange(_val) {},\n  type: 'checkbox'\n});\n\nvar MenuOptionGroup = function MenuOptionGroup(_ref, ref) {\n  var type = _ref.type,\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var internalDefaultValue = defaultValue ? Array.isArray(defaultValue) ? defaultValue : [defaultValue] : [];\n\n  var _React$useState = React.useState(internalDefaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      internalValues = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var _onChange = function _onChange(newValue) {\n    if (type === 'checkbox') {\n      var newValues = _toConsumableArray(internalValues);\n\n      if (internalValues.includes(newValue)) {\n        newValues.splice(newValues.indexOf(newValue), 1);\n        setValues(newValues);\n      } else {\n        newValues.push(newValue);\n        setValues(newValues);\n      }\n\n      onChange && onChange(newValues);\n    } else if (type === 'radio') {\n      setValues([newValue]);\n      onChange && onChange(newValue);\n    }\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(MenuOptionContext.Provider, {\n    value: {\n      values: !value ? internalValues : Array.isArray(value) ? value : [value],\n      onChange: _onChange,\n      type: type\n    }\n  }, React.createElement(MenuGroup, _extends({}, props, {\n    ref: ref\n  })));\n};\n\nexport default memo(forwardRef(MenuOptionGroup));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,SAAP;AAEA,SAASC,qBAAT;AAEA,OAAO,IAAMC,iBAAiB,GAAGL,KAAK,CAACM,aAANN,CAA6C;EAC5EO,MAAM,EAAE,EADoE;EAE5EC,QAAQ,EAAGC,sBAAD,EAAU,CAFwD;EAG5EC,IAAI,EAAE;AAHsE,CAA7CV,CAA1B;;AAMP,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,OAEtBC,GAFsB,EAGnB;EAAA,IAFDF,IAEC,QAFDA,IAEC;EAAA,IAFKG,YAEL,QAFKA,YAEL;EAAA,IAFmBC,KAEnB,QAFmBA,KAEnB;EAAA,IAF0BN,QAE1B,QAF0BA,QAE1B;EAAA,IAFuCO,KAEvC;;EACH,IAAMC,oBAAoB,GAAGH,YAAY,GACrCI,KAAK,CAACC,OAAND,CAAcJ,YAAdI,IACEJ,YADFI,GAEE,CAACJ,YAAD,CAHmC,GAIrC,EAJJ;;EAMA,sBAAoCb,KAAK,CAACmB,QAANnB,CAClCgB,oBADkChB,CAApC;EAAA;EAAA,IAAOoB,cAAP;EAAA,IAAuBC,SAAvB;;EAGA,IAAMC,SAAS,GAAIC,SAAbD,SAAaC,SAAD,EAA+B;IAC/C,IAAIb,IAAI,KAAK,UAAb,EAAyB;MACvB,IAAMc,SAAS,sBAAOJ,cAAP,CAAf;;MACA,IAAIA,cAAc,CAACK,QAAfL,CAAwBG,QAAxBH,CAAJ,EAAuC;QACrCI,SAAS,CAACE,MAAVF,CAAiBA,SAAS,CAACG,OAAVH,CAAkBD,QAAlBC,CAAjBA,EAA8C,CAA9CA;QACAH,SAAS,CAACG,SAAD,CAATH;MAFF,OAGO;QACLG,SAAS,CAACI,IAAVJ,CAAeD,QAAfC;QACAH,SAAS,CAACG,SAAD,CAATH;MACD;;MACDb,QAAQ,IAAIA,QAAQ,CAACgB,SAAD,CAApBhB;IATF,OAUO,IAAIE,IAAI,KAAK,OAAb,EAAsB;MAC3BW,SAAS,CAAC,CAACE,QAAD,CAAD,CAATF;MACAb,QAAQ,IAAIA,QAAQ,CAACe,QAAD,CAApBf;IACD;EAdH;;EAiBA,IAAIJ,qBAAqB,CAACW,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACEf,oBAACK,iBAAD,CAAmBwB,QAAnB;IACEf,KAAK,EAAE;MACLP,MAAM,EAAE,CAACO,KAAD,GACJM,cADI,GAEJH,KAAK,CAACC,OAAND,CAAcH,KAAdG,IACAH,KADAG,GAEA,CAACH,KAAD,CALC;MAMLN,QAAQ,EAAEc,SANL;MAOLZ;IAPK;EADT,GAWEV,oBAACG,SAAD,eAAeY,KAAf;IAAsBH,GAAG,EAAEA;EAA3B,GAXF,CADF;AAjCF;;AAkDA,eAAeV,IAAI,CAACD,UAAU,CAACU,eAAD,CAAX,CAAnB","names":["React","forwardRef","memo","MenuGroup","useHasResponsiveProps","MenuOptionContext","createContext","values","onChange","_val","type","MenuOptionGroup","ref","defaultValue","value","props","internalDefaultValue","Array","isArray","useState","internalValues","setValues","_onChange","newValue","newValues","includes","splice","indexOf","push","Provider"],"sources":["MenuOptionGroup.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport MenuGroup from './MenuGroup';\nimport type { IMenuOptionGroupProps, IMenuOptionContextProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const MenuOptionContext = React.createContext<IMenuOptionContextProps>({\n  values: [],\n  onChange: (_val) => {},\n  type: 'checkbox',\n});\n\nconst MenuOptionGroup = (\n  { type, defaultValue, value, onChange, ...props }: IMenuOptionGroupProps,\n  ref?: any\n) => {\n  const internalDefaultValue = defaultValue\n    ? Array.isArray(defaultValue)\n      ? defaultValue\n      : [defaultValue]\n    : [];\n\n  const [internalValues, setValues] = React.useState<Array<string | number>>(\n    internalDefaultValue\n  );\n  const _onChange = (newValue: string | number) => {\n    if (type === 'checkbox') {\n      const newValues = [...internalValues];\n      if (internalValues.includes(newValue)) {\n        newValues.splice(newValues.indexOf(newValue), 1);\n        setValues(newValues);\n      } else {\n        newValues.push(newValue);\n        setValues(newValues);\n      }\n      onChange && onChange(newValues);\n    } else if (type === 'radio') {\n      setValues([newValue]);\n      onChange && onChange(newValue);\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <MenuOptionContext.Provider\n      value={{\n        values: !value\n          ? internalValues\n          : Array.isArray(value)\n          ? value\n          : [value],\n        onChange: _onChange,\n        type,\n      }}\n    >\n      <MenuGroup {...props} ref={ref} />\n    </MenuOptionContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(MenuOptionGroup));\n"]},"metadata":{},"sourceType":"module"}
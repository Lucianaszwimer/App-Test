{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"_scrollview\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { ScrollView } from \"../../basic/ScrollView\";\n\nvar ModalBody = function ModalBody(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('ModalBody', props),\n      _scrollview = _usePropsResolution._scrollview,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(ScrollView, _scrollview, React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), children));\n};\n\nexport default memo(forwardRef(ModalBody));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP;AACA,SAASC,kBAAT;AACA,SAASC,qBAAT;AACA,SAASC,UAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAEhBC,GAFgB,EAGb;EAAA,IAFDC,QAEC,QAFDA,QAEC;EAAA,IAFYC,KAEZ;;EACH,0BAA0CN,kBAAkB,CAC1D,WAD0D,EAE1DM,KAF0D,CAA5D;EAAA,IAAQC,WAAR,uBAAQA,WAAR;EAAA,IAAwBC,aAAxB;;EAKA,IAAIP,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACEV,oBAACM,UAAD,EAAgBK,WAAhB,EACEX,oBAACG,GAAD,eAASS,aAAT;IAAwBJ,GAAG,EAAEA;EAA7B,IACGC,QADH,CADF,CADF;AAZF;;AAqBA,eAAeR,IAAI,CAACC,UAAU,CAACK,SAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","ScrollView","ModalBody","ref","children","props","_scrollview","resolvedProps"],"sources":["ModalBody.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]},"metadata":{},"sourceType":"module"}
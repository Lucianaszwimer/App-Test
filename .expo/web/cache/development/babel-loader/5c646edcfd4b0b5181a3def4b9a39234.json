{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Container = function Container(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var resolvedProps = usePropsResolution('Container', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    ref: ref\n  }, resolvedProps), children);\n};\n\nexport default React.memo(React.forwardRef(Container));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT;AACA,OAAOC,GAAP;AAEA,SAASC,qBAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0CC,GAA1C,EAAwD;EAAA,IAArDC,QAAqD,QAArDA,QAAqD;EAAA,IAAxCC,KAAwC;;EACxE,IAAMC,aAAa,GAAGP,kBAAkB,CAAC,WAAD,EAAcM,KAAd,CAAxC;;EAGA,IAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACEP,oBAACE,GAAD;IAAKG,GAAG,EAAEA;EAAV,GAAmBG,aAAnB,GACGF,QADH,CADF;AAPF;;AAcA,eAAeN,KAAK,CAACS,IAANT,CAAWA,KAAK,CAACU,UAANV,CAAiBI,SAAjBJ,CAAXA,CAAf","names":["React","usePropsResolution","Box","useHasResponsiveProps","Container","ref","children","props","resolvedProps","memo","forwardRef"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { IContainerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Container = ({ children, ...props }: IContainerProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('Container', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box ref={ref} {...resolvedProps}>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Container));\nexport type { IContainerProps };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { mode, getColor, getColorScheme, transparentize } from \"../tools\";\n\nfunction getBg(props) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme,\n      status = props.status,\n      variant = props.variant;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  var lightBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".600\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".100\"), colorScheme);\n  var darkBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".700\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".200\"), colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nvar variantSubtle = function variantSubtle(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\n\nvar variantOutline = function variantOutline(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    borderColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\n\nvar variantOutlineLight = function variantOutlineLight(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status,\n      theme = props.theme;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\"))(props), 0.2)(theme),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n    }\n  };\n};\n\nvar variantSolid = function variantSolid(props) {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"coolGray.50\", \"warmGray.50\")(props)\n    }\n  };\n};\n\nvar variantLeftAccent = function variantLeftAccent(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    borderColor: 'transparent',\n    borderLeftColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n  };\n};\n\nvar variantTopAccent = function variantTopAccent(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props),\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\n\nvar variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight\n};\nexport var Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm'\n  },\n  variants: variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle'\n  }\n};\nexport var AlertIcon = {\n  baseStyle: {\n    size: 4\n  }\n};","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,cAAzC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAA2C;EACzC,IAAMC,KAAN,GAA8CD,KAA9C,CAAMC,KAAN;EAAA,IAAaC,WAAb,GAA8CF,KAA9C,CAAaE,WAAb;EAAA,IAA0BC,MAA1B,GAA8CH,KAA9C,CAA0BG,MAA1B;EAAA,IAAkCC,OAAlC,GAA8CJ,KAA9C,CAAkCI,OAAlC;EAEAF,WAAW,GAAGL,cAAc,CAC1BG,KAD0B,EAE1BE,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0CC,MAFhB,CAA5BD;EAIA,IAAMG,OAAO,GACXD,OAAO,KAAK,OAAZA,GACIR,QAAQ,CAACK,KAAD,YAAWC,WAAX,WAA8BA,WAA9B,CADZE,GAEIR,QAAQ,CAACK,KAAD,YAAWC,WAAX,WAA8BA,WAA9B,CAHd;EAKA,IAAMI,MAAM,GACVF,OAAO,KAAK,OAAZA,GACIR,QAAQ,CAACK,KAAD,YAAWC,WAAX,WAA8BA,WAA9B,CADZE,GAEIR,QAAQ,CAACK,KAAD,YAAWC,WAAX,WAA8BA,WAA9B,CAHd;EAIA,OAAOP,IAAI,CAACU,OAAD,EAAUC,MAAV,CAAJX,CAAsBK,KAAtBL,CAAP;AACD;;AAED,IAAMY,aAAa,GAAIP,SAAjBO,aAAiBP,MAAD,EAAgC;EACpD,IAAME,WAAN,GAA8BF,KAA9B,CAAME,WAAN;EAAA,IAAmBC,MAAnB,GAA8BH,KAA9B,CAAmBG,MAAnB;EACAD,WAAW,GAAGL,cAAc,CAC1BG,KAD0B,EAE1BE,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0CC,MAFhB,CAA5BD;EAIA,OAAO;IACLM,EAAE,EAAET,KAAK,CAACC,KAAD,CADJ;IAELS,KAAK,EAAE;MAAEC,KAAK,EAAEf,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL;IAAT;EAFF,CAAP;AANF;;AAYA,IAAMgB,cAAc,GAAIX,SAAlBW,cAAkBX,MAAD,EAAgC;EACrD,IAAME,WAAN,GAA8BF,KAA9B,CAAME,WAAN;EAAA,IAAmBC,MAAnB,GAA8BH,KAA9B,CAAmBG,MAAnB;EACAD,WAAW,GAAGL,cAAc,CAC1BG,KAD0B,EAE1BE,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0CC,MAFhB,CAA5BD;EAIA,OAAO;IACLU,WAAW,EAAE,CADR;IAELC,WAAW,EAAElB,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL,CAFR;IAGLc,KAAK,EAAE;MAAEC,KAAK,EAAEf,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL;IAAT;EAHF,CAAP;AANF;;AAYA,IAAMmB,mBAAmB,GAAId,SAAvBc,mBAAuBd,MAAD,EAAgC;EAC1D,IAAME,WAAN,GAAqCF,KAArC,CAAME,WAAN;EAAA,IAAmBC,MAAnB,GAAqCH,KAArC,CAAmBG,MAAnB;EAAA,IAA2BF,KAA3B,GAAqCD,KAArC,CAA2BC,KAA3B;EACAC,WAAW,GAAGL,cAAc,CAC1BG,KAD0B,EAE1BE,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0CC,MAFhB,CAA5BD;EAIA,OAAO;IACLU,WAAW,EAAE,CADR;IAELC,WAAW,EAAEf,cAAc,CACzBH,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL,CADyB,EAEzB,GAFyB,CAAdG,CAGXG,KAHWH,CAFR;IAMLW,KAAK,EAAE;MAAEC,KAAK,EAAEf,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL;IAAT;EANF,CAAP;AANF;;AAgBA,IAAMoB,YAAY,GAAIf,SAAhBe,YAAgBf,MAAD,EAAgC;EACnD,OAAO;IACLY,WAAW,EAAE,CADR;IAELC,WAAW,EAAE,aAFR;IAGLL,EAAE,EAAET,KAAK,CAACC,KAAD,CAHJ;IAILS,KAAK,EAAE;MAAEC,KAAK,EAAEf,IAAI,8BAAJA,CAAmCK,KAAnCL;IAAT;EAJF,CAAP;AADF;;AAQA,IAAMqB,iBAAiB,GAAIhB,SAArBgB,iBAAqBhB,MAAD,EAAgC;EACxD,IAAME,WAAN,GAA8BF,KAA9B,CAAME,WAAN;EAAA,IAAmBC,MAAnB,GAA8BH,KAA9B,CAAmBG,MAAnB;EACAD,WAAW,GAAGL,cAAc,CAC1BG,KAD0B,EAE1BE,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0CC,MAFhB,CAA5BD;EAIA,OAAO;IACLU,WAAW,EAAE,CADR;IAELJ,EAAE,EAAET,KAAK,CAACC,KAAD,CAFJ;IAGLS,KAAK,EAAE;MAAEC,KAAK,EAAEf,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL;IAAT,CAHF;IAILkB,WAAW,EAAE,aAJR;IAKLI,eAAe,EAAEtB,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL;EALZ,CAAP;AANF;;AAcA,IAAMuB,gBAAgB,GAAIlB,SAApBkB,gBAAoBlB,MAAD,EAAgC;EACvD,IAAME,WAAN,GAA8BF,KAA9B,CAAME,WAAN;EAAA,IAAmBC,MAAnB,GAA8BH,KAA9B,CAAmBG,MAAnB;EACAD,WAAW,GAAGL,cAAc,CAC1BG,KAD0B,EAE1BE,WAAW,KAAK,SAAhBA,GAA4BA,WAA5BA,GAA0CC,MAFhB,CAA5BD;EAIA,OAAO;IACLU,WAAW,EAAE,CADR;IAELC,WAAW,EAAE,aAFR;IAGLM,cAAc,EAAExB,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL,CAHX;IAILa,EAAE,EAAET,KAAK,CAACC,KAAD,CAJJ;IAKLS,KAAK,EAAE;MAAEC,KAAK,EAAEf,IAAI,WAAIO,WAAJ,qBAA0BA,WAA1B,UAAJP,CAAiDK,KAAjDL;IAAT;EALF,CAAP;AANF;;AAeA,IAAMyB,QAAQ,GAAG;EACf,UAAUb,aADK;EAEf,SAASQ,YAFM;EAGf,eAAeC,iBAHA;EAIf,cAAcE,gBAJC;EAKf,WAAWP,cALI;EAMf,iBAAiBG;AANF,CAAjB;AASA,OAAO,IAAMO,KAAK,GAAG;EACnBC,SAAS,EAAE;IACTC,UAAU,EAAE,QADH;IAETC,cAAc,EAAE,YAFP;IAGTC,CAAC,EAAE,CAHM;IAITC,KAAK,EAAE,CAJE;IAKTC,YAAY,EAAE;EALL,CADQ;EAQnBP,QARmB,EAQnBA,QARmB;EASnBQ,YAAY,EAAE;IACZ1B,WAAW,EAAE,SADD;IAEZE,OAAO,EAAE;EAFG;AATK,CAAd;AAiBP,OAAO,IAAMyB,SAAS,GAAG;EACvBP,SAAS,EAAE;IACTQ,IAAI,EAAE;EADG;AADY,CAAlB","names":["mode","getColor","getColorScheme","transparentize","getBg","props","theme","colorScheme","status","variant","lightBg","darkBg","variantSubtle","bg","_icon","color","variantOutline","borderWidth","borderColor","variantOutlineLight","variantSolid","variantLeftAccent","borderLeftColor","variantTopAccent","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"sources":["alert.ts"],"sourcesContent":["import { mode, getColor, getColorScheme, transparentize } from '../tools';\n\nfunction getBg(props: Record<string, any>) {\n  let { theme, colorScheme, status, variant } = props;\n\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.100`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nconst variantSubtle = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variantOutline = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\nconst variantOutlineLight = (props: Record<string, any>) => {\n  let { colorScheme, status, theme } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(\n      mode(`${colorScheme}.600`, `${colorScheme}.500`)(props),\n      0.2\n    )(theme),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n  };\n};\n\nconst variantSolid = (props: Record<string, any>) => {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: { color: mode(`coolGray.50`, `warmGray.50`)(props) },\n  };\n};\nconst variantLeftAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n    borderColor: 'transparent',\n    borderLeftColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n  };\n};\nconst variantTopAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}